

================================================================
== Vitis HLS Report for 'CNN_Pipeline_loop_for_channel_pool_0_loop_for_weight_pool_0'
================================================================
* Date:           Sat Jun  1 06:31:04 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        doan
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck26-sfvc784-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.013 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      644|      644|  6.440 us|  6.440 us|  644|  644|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                  |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                     Loop Name                    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- loop_for_channel_pool_0_loop_for_weight_pool_0  |      642|      642|         4|          1|          1|   640|       yes|
        +--------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.60>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%y = alloca i32 1" [Pool.cpp:9->CNN.cpp:33]   --->   Operation 7 'alloca' 'y' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%z = alloca i32 1" [Pool.cpp:6->CNN.cpp:33]   --->   Operation 8 'alloca' 'z' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%indvar_flatten20 = alloca i32 1"   --->   Operation 9 'alloca' 'indvar_flatten20' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.42ns)   --->   "%store_ln0 = store i10 0, i10 %indvar_flatten20"   --->   Operation 10 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 11 [1/1] (0.42ns)   --->   "%store_ln6 = store i3 0, i3 %z" [Pool.cpp:6->CNN.cpp:33]   --->   Operation 11 'store' 'store_ln6' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 12 [1/1] (0.42ns)   --->   "%store_ln9 = store i8 0, i8 %y" [Pool.cpp:9->CNN.cpp:33]   --->   Operation 12 'store' 'store_ln9' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%br_ln0 = br void %VITIS_LOOP_11_1.i"   --->   Operation 13 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%indvar_flatten20_load = load i10 %indvar_flatten20" [Pool.cpp:6->CNN.cpp:33]   --->   Operation 14 'load' 'indvar_flatten20_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.78ns)   --->   "%icmp_ln6 = icmp_eq  i10 %indvar_flatten20_load, i10 640" [Pool.cpp:6->CNN.cpp:33]   --->   Operation 15 'icmp' 'icmp_ln6' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.78ns)   --->   "%add_ln6 = add i10 %indvar_flatten20_load, i10 1" [Pool.cpp:6->CNN.cpp:33]   --->   Operation 16 'add' 'add_ln6' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%br_ln6 = br i1 %icmp_ln6, void %for.inc20.i, void %for.body4.i49.preheader.exitStub" [Pool.cpp:6->CNN.cpp:33]   --->   Operation 17 'br' 'br_ln6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%y_load = load i8 %y" [Pool.cpp:9->CNN.cpp:33]   --->   Operation 18 'load' 'y_load' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%z_load = load i3 %z" [Pool.cpp:6->CNN.cpp:33]   --->   Operation 19 'load' 'z_load' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.76ns)   --->   "%icmp_ln9 = icmp_eq  i8 %y_load, i8 160" [Pool.cpp:9->CNN.cpp:33]   --->   Operation 20 'icmp' 'icmp_ln9' <Predicate = (!icmp_ln6)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.39ns)   --->   "%select_ln6 = select i1 %icmp_ln9, i8 0, i8 %y_load" [Pool.cpp:6->CNN.cpp:33]   --->   Operation 21 'select' 'select_ln6' <Predicate = (!icmp_ln6)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.67ns)   --->   "%add_ln6_1 = add i3 %z_load, i3 1" [Pool.cpp:6->CNN.cpp:33]   --->   Operation 22 'add' 'add_ln6_1' <Predicate = (!icmp_ln6)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.20ns)   --->   "%select_ln6_1 = select i1 %icmp_ln9, i3 %add_ln6_1, i3 %z_load" [Pool.cpp:6->CNN.cpp:33]   --->   Operation 23 'select' 'select_ln6_1' <Predicate = (!icmp_ln6)> <Delay = 0.20> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.20> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%empty = trunc i3 %select_ln6_1" [Pool.cpp:6->CNN.cpp:33]   --->   Operation 24 'trunc' 'empty' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%tmp_6 = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i2.i2.i6, i2 %empty, i2 %empty, i6 0" [Pool.cpp:6->CNN.cpp:33]   --->   Operation 25 'bitconcatenate' 'tmp_6' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%p_cast62 = zext i10 %tmp_6" [Pool.cpp:6->CNN.cpp:33]   --->   Operation 26 'zext' 'p_cast62' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%tmp_16 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i8.i1, i8 %select_ln6, i1 0" [Pool.cpp:6->CNN.cpp:33]   --->   Operation 27 'bitconcatenate' 'tmp_16' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i9 %tmp_16" [Pool.cpp:13->CNN.cpp:33]   --->   Operation 28 'zext' 'zext_ln13' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.78ns)   --->   "%add_ln13 = add i11 %zext_ln13, i11 %p_cast62" [Pool.cpp:13->CNN.cpp:33]   --->   Operation 29 'add' 'add_ln13' <Predicate = (!icmp_ln6)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln14 = zext i11 %add_ln13" [Pool.cpp:14->CNN.cpp:33]   --->   Operation 30 'zext' 'zext_ln14' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%OutConv1_addr = getelementptr i32 %OutConv1, i64 0, i64 %zext_ln14" [Pool.cpp:14->CNN.cpp:33]   --->   Operation 31 'getelementptr' 'OutConv1_addr' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_1 : Operation 32 [2/2] (1.23ns)   --->   "%pool_value = load i11 %OutConv1_addr" [Pool.cpp:14->CNN.cpp:33]   --->   Operation 32 'load' 'pool_value' <Predicate = (!icmp_ln6)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1280> <RAM>
ST_1 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node add_ln13_1)   --->   "%or_ln13 = or i10 %tmp_6, i10 1" [Pool.cpp:13->CNN.cpp:33]   --->   Operation 33 'or' 'or_ln13' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns) (grouped into LUT with out node add_ln13_1)   --->   "%zext_ln13_1 = zext i10 %or_ln13" [Pool.cpp:13->CNN.cpp:33]   --->   Operation 34 'zext' 'zext_ln13_1' <Predicate = (!icmp_ln6)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.78ns) (out node of the LUT)   --->   "%add_ln13_1 = add i11 %zext_ln13, i11 %zext_ln13_1" [Pool.cpp:13->CNN.cpp:33]   --->   Operation 35 'add' 'add_ln13_1' <Predicate = (!icmp_ln6)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.76ns)   --->   "%add_ln19 = add i8 %select_ln6, i8 1" [Pool.cpp:19->CNN.cpp:33]   --->   Operation 36 'add' 'add_ln19' <Predicate = (!icmp_ln6)> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.42ns)   --->   "%store_ln6 = store i10 %add_ln6, i10 %indvar_flatten20" [Pool.cpp:6->CNN.cpp:33]   --->   Operation 37 'store' 'store_ln6' <Predicate = (!icmp_ln6)> <Delay = 0.42>
ST_1 : Operation 38 [1/1] (0.42ns)   --->   "%store_ln6 = store i3 %select_ln6_1, i3 %z" [Pool.cpp:6->CNN.cpp:33]   --->   Operation 38 'store' 'store_ln6' <Predicate = (!icmp_ln6)> <Delay = 0.42>
ST_1 : Operation 39 [1/1] (0.42ns)   --->   "%store_ln9 = store i8 %add_ln19, i8 %y" [Pool.cpp:9->CNN.cpp:33]   --->   Operation 39 'store' 'store_ln9' <Predicate = (!icmp_ln6)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 4.01>
ST_2 : Operation 40 [1/2] (1.23ns)   --->   "%pool_value = load i11 %OutConv1_addr" [Pool.cpp:14->CNN.cpp:33]   --->   Operation 40 'load' 'pool_value' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1280> <RAM>
ST_2 : Operation 41 [2/2] (2.78ns)   --->   "%tmp_s = fcmp_ogt  i32 %pool_value, i32 -10" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 41 'fcmp' 'tmp_s' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln14_1 = zext i11 %add_ln13_1" [Pool.cpp:14->CNN.cpp:33]   --->   Operation 42 'zext' 'zext_ln14_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%OutConv1_addr_1 = getelementptr i32 %OutConv1, i64 0, i64 %zext_ln14_1" [Pool.cpp:14->CNN.cpp:33]   --->   Operation 43 'getelementptr' 'OutConv1_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [2/2] (1.23ns)   --->   "%pool_value_4 = load i11 %OutConv1_addr_1" [Pool.cpp:14->CNN.cpp:33]   --->   Operation 44 'load' 'pool_value_4' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1280> <RAM>

State 3 <SV = 2> <Delay = 6.01>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%bitcast_ln15 = bitcast i32 %pool_value" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 45 'bitcast' 'bitcast_ln15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_9 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln15, i32 23, i32 30" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 46 'partselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%trunc_ln15 = trunc i32 %bitcast_ln15" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 47 'trunc' 'trunc_ln15' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.76ns)   --->   "%icmp_ln15 = icmp_ne  i8 %tmp_9, i8 255" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 48 'icmp' 'icmp_ln15' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 49 [1/1] (0.92ns)   --->   "%icmp_ln15_1 = icmp_eq  i23 %trunc_ln15, i23 0" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 49 'icmp' 'icmp_ln15_1' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node max_11)   --->   "%or_ln15 = or i1 %icmp_ln15_1, i1 %icmp_ln15" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 50 'or' 'or_ln15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 51 [1/2] (2.78ns)   --->   "%tmp_s = fcmp_ogt  i32 %pool_value, i32 -10" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 51 'fcmp' 'tmp_s' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node max_11)   --->   "%and_ln15 = and i1 %or_ln15, i1 %tmp_s" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 52 'and' 'and_ln15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (0.44ns) (out node of the LUT)   --->   "%max_11 = select i1 %and_ln15, i32 %pool_value, i32 -10" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 53 'select' 'max_11' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 54 [1/2] (1.23ns)   --->   "%pool_value_4 = load i11 %OutConv1_addr_1" [Pool.cpp:14->CNN.cpp:33]   --->   Operation 54 'load' 'pool_value_4' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1280> <RAM>
ST_3 : Operation 55 [2/2] (2.78ns)   --->   "%tmp_12 = fcmp_ogt  i32 %pool_value_4, i32 %max_11" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 55 'fcmp' 'tmp_12' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 86 'ret' 'ret_ln0' <Predicate = (icmp_ln6)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 4.75>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @loop_for_channel_pool_0_loop_for_weight_pool_0_str"   --->   Operation 56 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 640, i64 640, i64 640"   --->   Operation 57 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%p_shl9 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i2.i7, i2 %empty, i7 0" [Pool.cpp:6->CNN.cpp:33]   --->   Operation 58 'bitconcatenate' 'p_shl9' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%p_shl9_cast = zext i9 %p_shl9" [Pool.cpp:6->CNN.cpp:33]   --->   Operation 59 'zext' 'p_shl9_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%p_shl3 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i2.i5, i2 %empty, i5 0" [Pool.cpp:6->CNN.cpp:33]   --->   Operation 60 'bitconcatenate' 'p_shl3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln9 = zext i7 %p_shl3" [Pool.cpp:9->CNN.cpp:33]   --->   Operation 61 'zext' 'zext_ln9' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%specpipeline_ln4 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_7" [Pool.cpp:4->CNN.cpp:33]   --->   Operation 62 'specpipeline' 'specpipeline_ln4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%bitcast_ln15_1 = bitcast i32 %pool_value_4" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 63 'bitcast' 'bitcast_ln15_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_10 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln15_1, i32 23, i32 30" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 64 'partselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%trunc_ln15_1 = trunc i32 %bitcast_ln15_1" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 65 'trunc' 'trunc_ln15_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%bitcast_ln15_2 = bitcast i32 %max_11" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 66 'bitcast' 'bitcast_ln15_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_11 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln15_2, i32 23, i32 30" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 67 'partselect' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "%trunc_ln15_2 = trunc i32 %bitcast_ln15_2" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 68 'trunc' 'trunc_ln15_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.76ns)   --->   "%icmp_ln15_2 = icmp_ne  i8 %tmp_10, i8 255" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 69 'icmp' 'icmp_ln15_2' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 70 [1/1] (0.92ns)   --->   "%icmp_ln15_3 = icmp_eq  i23 %trunc_ln15_1, i23 0" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 70 'icmp' 'icmp_ln15_3' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node and_ln15_2)   --->   "%or_ln15_1 = or i1 %icmp_ln15_3, i1 %icmp_ln15_2" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 71 'or' 'or_ln15_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 72 [1/1] (0.76ns)   --->   "%icmp_ln15_4 = icmp_ne  i8 %tmp_11, i8 255" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 72 'icmp' 'icmp_ln15_4' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 73 [1/1] (0.92ns)   --->   "%icmp_ln15_5 = icmp_eq  i23 %trunc_ln15_2, i23 0" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 73 'icmp' 'icmp_ln15_5' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node and_ln15_2)   --->   "%or_ln15_2 = or i1 %icmp_ln15_5, i1 %icmp_ln15_4" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 74 'or' 'or_ln15_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node and_ln15_2)   --->   "%and_ln15_1 = and i1 %or_ln15_1, i1 %or_ln15_2" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 75 'and' 'and_ln15_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 76 [1/2] (2.78ns)   --->   "%tmp_12 = fcmp_ogt  i32 %pool_value_4, i32 %max_11" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 76 'fcmp' 'tmp_12' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 77 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln15_2 = and i1 %and_ln15_1, i1 %tmp_12" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 77 'and' 'and_ln15_2' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 78 [1/1] (0.44ns) (out node of the LUT)   --->   "%max_13 = select i1 %and_ln15_2, i32 %pool_value_4, i32 %max_11" [Pool.cpp:15->CNN.cpp:33]   --->   Operation 78 'select' 'max_13' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 79 [1/1] (0.76ns)   --->   "%add_ln17_1 = add i8 %zext_ln9, i8 %select_ln6" [Pool.cpp:17->CNN.cpp:33]   --->   Operation 79 'add' 'add_ln17_1' <Predicate = true> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln17 = zext i8 %add_ln17_1" [Pool.cpp:17->CNN.cpp:33]   --->   Operation 80 'zext' 'zext_ln17' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (0.77ns)   --->   "%add_ln17 = add i10 %zext_ln17, i10 %p_shl9_cast" [Pool.cpp:17->CNN.cpp:33]   --->   Operation 81 'add' 'add_ln17' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln18 = zext i10 %add_ln17" [Pool.cpp:18->CNN.cpp:33]   --->   Operation 82 'zext' 'zext_ln18' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "%OutPool0_addr = getelementptr i32 %OutPool0, i64 0, i64 %zext_ln18" [Pool.cpp:18->CNN.cpp:33]   --->   Operation 83 'getelementptr' 'OutPool0_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 84 [1/1] (1.23ns)   --->   "%store_ln18 = store i32 %max_13, i10 %OutPool0_addr" [Pool.cpp:18->CNN.cpp:33]   --->   Operation 84 'store' 'store_ln18' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 640> <RAM>
ST_4 : Operation 85 [1/1] (0.00ns)   --->   "%br_ln9 = br void %VITIS_LOOP_11_1.i" [Pool.cpp:9->CNN.cpp:33]   --->   Operation 85 'br' 'br_ln9' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 3.609ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln9', Pool.cpp:9->CNN.cpp:33) of constant 0 on local variable 'y', Pool.cpp:9->CNN.cpp:33 [8]  (0.427 ns)
	'load' operation 8 bit ('y_load', Pool.cpp:9->CNN.cpp:33) on local variable 'y', Pool.cpp:9->CNN.cpp:33 [16]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln9', Pool.cpp:9->CNN.cpp:33) [20]  (0.765 ns)
	'select' operation 8 bit ('select_ln6', Pool.cpp:6->CNN.cpp:33) [21]  (0.393 ns)
	'add' operation 11 bit ('add_ln13', Pool.cpp:13->CNN.cpp:33) [34]  (0.787 ns)
	'getelementptr' operation 11 bit ('OutConv1_addr', Pool.cpp:14->CNN.cpp:33) [36]  (0.000 ns)
	'load' operation 32 bit ('pool_value', Pool.cpp:14->CNN.cpp:33) on array 'OutConv1' [37]  (1.237 ns)

 <State 2>: 4.019ns
The critical path consists of the following:
	'load' operation 32 bit ('pool_value', Pool.cpp:14->CNN.cpp:33) on array 'OutConv1' [37]  (1.237 ns)
	'fcmp' operation 1 bit ('tmp_s', Pool.cpp:15->CNN.cpp:33) [44]  (2.782 ns)

 <State 3>: 6.013ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_s', Pool.cpp:15->CNN.cpp:33) [44]  (2.782 ns)
	'and' operation 1 bit ('and_ln15', Pool.cpp:15->CNN.cpp:33) [45]  (0.000 ns)
	'select' operation 32 bit ('max', Pool.cpp:15->CNN.cpp:33) [46]  (0.449 ns)
	'fcmp' operation 1 bit ('tmp_12', Pool.cpp:15->CNN.cpp:33) [66]  (2.782 ns)

 <State 4>: 4.755ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_12', Pool.cpp:15->CNN.cpp:33) [66]  (2.782 ns)
	'and' operation 1 bit ('and_ln15_2', Pool.cpp:15->CNN.cpp:33) [67]  (0.287 ns)
	'select' operation 32 bit ('max', Pool.cpp:15->CNN.cpp:33) [68]  (0.449 ns)
	'store' operation 0 bit ('store_ln18', Pool.cpp:18->CNN.cpp:33) of variable 'max', Pool.cpp:15->CNN.cpp:33 on array 'OutPool0' [74]  (1.237 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
