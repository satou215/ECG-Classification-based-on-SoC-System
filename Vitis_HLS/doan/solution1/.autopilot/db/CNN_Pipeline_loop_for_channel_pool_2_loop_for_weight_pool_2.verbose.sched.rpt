

================================================================
== Vitis HLS Report for 'CNN_Pipeline_loop_for_channel_pool_2_loop_for_weight_pool_2'
================================================================
* Date:           Sat Jun  1 06:31:14 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        doan
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck26-sfvc784-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.013 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      644|      644|  6.440 us|  6.440 us|  644|  644|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                  |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                     Loop Name                    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- loop_for_channel_pool_2_loop_for_weight_pool_2  |      642|      642|         4|          1|          1|   640|       yes|
        +--------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.45>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%y = alloca i32 1" [Pool.cpp:53->CNN.cpp:43]   --->   Operation 7 'alloca' 'y' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%z = alloca i32 1" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 8 'alloca' 'z' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%indvar_flatten129 = alloca i32 1"   --->   Operation 9 'alloca' 'indvar_flatten129' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.42ns)   --->   "%store_ln0 = store i10 0, i10 %indvar_flatten129"   --->   Operation 10 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 11 [1/1] (0.42ns)   --->   "%store_ln50 = store i5 0, i5 %z" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 11 'store' 'store_ln50' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 12 [1/1] (0.42ns)   --->   "%store_ln53 = store i6 0, i6 %y" [Pool.cpp:53->CNN.cpp:43]   --->   Operation 12 'store' 'store_ln53' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%br_ln0 = br void %VITIS_LOOP_55_1.i"   --->   Operation 13 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%indvar_flatten129_load = load i10 %indvar_flatten129" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 14 'load' 'indvar_flatten129_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.78ns)   --->   "%icmp_ln50 = icmp_eq  i10 %indvar_flatten129_load, i10 640" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 15 'icmp' 'icmp_ln50' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.78ns)   --->   "%add_ln50 = add i10 %indvar_flatten129_load, i10 1" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 16 'add' 'add_ln50' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%br_ln50 = br i1 %icmp_ln50, void %for.inc20.i264, void %for.body4.i270.preheader.exitStub" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 17 'br' 'br_ln50' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%y_load = load i6 %y" [Pool.cpp:53->CNN.cpp:43]   --->   Operation 18 'load' 'y_load' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%z_load = load i5 %z" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 19 'load' 'z_load' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.78ns)   --->   "%icmp_ln53 = icmp_eq  i6 %y_load, i6 40" [Pool.cpp:53->CNN.cpp:43]   --->   Operation 20 'icmp' 'icmp_ln53' <Predicate = (!icmp_ln50)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.38ns)   --->   "%select_ln50 = select i1 %icmp_ln53, i6 0, i6 %y_load" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 21 'select' 'select_ln50' <Predicate = (!icmp_ln50)> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.78ns)   --->   "%add_ln50_1 = add i5 %z_load, i5 1" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 22 'add' 'add_ln50_1' <Predicate = (!icmp_ln50)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.41ns)   --->   "%select_ln50_1 = select i1 %icmp_ln53, i5 %add_ln50_1, i5 %z_load" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 23 'select' 'select_ln50_1' <Predicate = (!icmp_ln50)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%empty = trunc i5 %select_ln50_1" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 24 'trunc' 'empty' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%p_shl = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i4.i6, i4 %empty, i6 0" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 25 'bitconcatenate' 'p_shl' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%p_shl42_cast = zext i10 %p_shl" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 26 'zext' 'p_shl42_cast' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%p_shl4 = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i4.i4, i4 %empty, i4 0" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 27 'bitconcatenate' 'p_shl4' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%p_shl43_cast = zext i8 %p_shl4" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 28 'zext' 'p_shl43_cast' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.78ns)   --->   "%empty_132 = add i11 %p_shl42_cast, i11 %p_shl43_cast" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 29 'add' 'empty_132' <Predicate = (!icmp_ln50)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i6.i1, i6 %select_ln50, i1 0" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 30 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln57 = zext i7 %tmp_s" [Pool.cpp:57->CNN.cpp:43]   --->   Operation 31 'zext' 'zext_ln57' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.79ns)   --->   "%add_ln57 = add i11 %zext_ln57, i11 %empty_132" [Pool.cpp:57->CNN.cpp:43]   --->   Operation 32 'add' 'add_ln57' <Predicate = (!icmp_ln50)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln58 = zext i11 %add_ln57" [Pool.cpp:58->CNN.cpp:43]   --->   Operation 33 'zext' 'zext_ln58' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%OutConv5_addr = getelementptr i32 %OutConv5, i64 0, i64 %zext_ln58" [Pool.cpp:58->CNN.cpp:43]   --->   Operation 34 'getelementptr' 'OutConv5_addr' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_1 : Operation 35 [2/2] (1.23ns)   --->   "%pool_value = load i11 %OutConv5_addr" [Pool.cpp:58->CNN.cpp:43]   --->   Operation 35 'load' 'pool_value' <Predicate = (!icmp_ln50)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1280> <RAM>
ST_1 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node add_ln57_1)   --->   "%or_ln57 = or i11 %empty_132, i11 1" [Pool.cpp:57->CNN.cpp:43]   --->   Operation 36 'or' 'or_ln57' <Predicate = (!icmp_ln50)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.79ns) (out node of the LUT)   --->   "%add_ln57_1 = add i11 %zext_ln57, i11 %or_ln57" [Pool.cpp:57->CNN.cpp:43]   --->   Operation 37 'add' 'add_ln57_1' <Predicate = (!icmp_ln50)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.78ns)   --->   "%add_ln63 = add i6 %select_ln50, i6 1" [Pool.cpp:63->CNN.cpp:43]   --->   Operation 38 'add' 'add_ln63' <Predicate = (!icmp_ln50)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.42ns)   --->   "%store_ln50 = store i10 %add_ln50, i10 %indvar_flatten129" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 39 'store' 'store_ln50' <Predicate = (!icmp_ln50)> <Delay = 0.42>
ST_1 : Operation 40 [1/1] (0.42ns)   --->   "%store_ln50 = store i5 %select_ln50_1, i5 %z" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 40 'store' 'store_ln50' <Predicate = (!icmp_ln50)> <Delay = 0.42>
ST_1 : Operation 41 [1/1] (0.42ns)   --->   "%store_ln53 = store i6 %add_ln63, i6 %y" [Pool.cpp:53->CNN.cpp:43]   --->   Operation 41 'store' 'store_ln53' <Predicate = (!icmp_ln50)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 4.01>
ST_2 : Operation 42 [1/2] (1.23ns)   --->   "%pool_value = load i11 %OutConv5_addr" [Pool.cpp:58->CNN.cpp:43]   --->   Operation 42 'load' 'pool_value' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1280> <RAM>
ST_2 : Operation 43 [2/2] (2.78ns)   --->   "%tmp_7 = fcmp_ogt  i32 %pool_value, i32 -10" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 43 'fcmp' 'tmp_7' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln58_1 = zext i11 %add_ln57_1" [Pool.cpp:58->CNN.cpp:43]   --->   Operation 44 'zext' 'zext_ln58_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%OutConv5_addr_1 = getelementptr i32 %OutConv5, i64 0, i64 %zext_ln58_1" [Pool.cpp:58->CNN.cpp:43]   --->   Operation 45 'getelementptr' 'OutConv5_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [2/2] (1.23ns)   --->   "%pool_value_2 = load i11 %OutConv5_addr_1" [Pool.cpp:58->CNN.cpp:43]   --->   Operation 46 'load' 'pool_value_2' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1280> <RAM>

State 3 <SV = 2> <Delay = 6.01>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%bitcast_ln59 = bitcast i32 %pool_value" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 47 'bitcast' 'bitcast_ln59' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_6 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln59, i32 23, i32 30" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 48 'partselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%trunc_ln59 = trunc i32 %bitcast_ln59" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 49 'trunc' 'trunc_ln59' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.76ns)   --->   "%icmp_ln59 = icmp_ne  i8 %tmp_6, i8 255" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 50 'icmp' 'icmp_ln59' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (0.92ns)   --->   "%icmp_ln59_1 = icmp_eq  i23 %trunc_ln59, i23 0" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 51 'icmp' 'icmp_ln59_1' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node max_4)   --->   "%or_ln59 = or i1 %icmp_ln59_1, i1 %icmp_ln59" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 52 'or' 'or_ln59' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 53 [1/2] (2.78ns)   --->   "%tmp_7 = fcmp_ogt  i32 %pool_value, i32 -10" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 53 'fcmp' 'tmp_7' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node max_4)   --->   "%and_ln59 = and i1 %or_ln59, i1 %tmp_7" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 54 'and' 'and_ln59' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 55 [1/1] (0.44ns) (out node of the LUT)   --->   "%max_4 = select i1 %and_ln59, i32 %pool_value, i32 -10" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 55 'select' 'max_4' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 56 [1/2] (1.23ns)   --->   "%pool_value_2 = load i11 %OutConv5_addr_1" [Pool.cpp:58->CNN.cpp:43]   --->   Operation 56 'load' 'pool_value_2' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 1280> <RAM>
ST_3 : Operation 57 [2/2] (2.78ns)   --->   "%tmp_10 = fcmp_ogt  i32 %pool_value_2, i32 %max_4" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 57 'fcmp' 'tmp_10' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 89 'ret' 'ret_ln0' <Predicate = (icmp_ln50)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 4.75>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @loop_for_channel_pool_2_loop_for_weight_pool_2_str"   --->   Operation 58 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 640, i64 640, i64 640"   --->   Operation 59 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%p_shl5 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i4.i5, i4 %empty, i5 0" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 60 'bitconcatenate' 'p_shl5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%p_shl40_cast = zext i9 %p_shl5" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 61 'zext' 'p_shl40_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%p_shl6 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %empty, i3 0" [Pool.cpp:50->CNN.cpp:43]   --->   Operation 62 'bitconcatenate' 'p_shl6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%zext_ln53 = zext i7 %p_shl6" [Pool.cpp:53->CNN.cpp:43]   --->   Operation 63 'zext' 'zext_ln53' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln53_1 = zext i6 %select_ln50" [Pool.cpp:53->CNN.cpp:43]   --->   Operation 64 'zext' 'zext_ln53_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%specpipeline_ln48 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_7" [Pool.cpp:48->CNN.cpp:43]   --->   Operation 65 'specpipeline' 'specpipeline_ln48' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%bitcast_ln59_1 = bitcast i32 %pool_value_2" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 66 'bitcast' 'bitcast_ln59_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_8 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln59_1, i32 23, i32 30" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 67 'partselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "%trunc_ln59_1 = trunc i32 %bitcast_ln59_1" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 68 'trunc' 'trunc_ln59_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%bitcast_ln59_2 = bitcast i32 %max_4" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 69 'bitcast' 'bitcast_ln59_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_9 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln59_2, i32 23, i32 30" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 70 'partselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "%trunc_ln59_2 = trunc i32 %bitcast_ln59_2" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 71 'trunc' 'trunc_ln59_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (0.76ns)   --->   "%icmp_ln59_2 = icmp_ne  i8 %tmp_8, i8 255" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 72 'icmp' 'icmp_ln59_2' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 73 [1/1] (0.92ns)   --->   "%icmp_ln59_3 = icmp_eq  i23 %trunc_ln59_1, i23 0" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 73 'icmp' 'icmp_ln59_3' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node and_ln59_2)   --->   "%or_ln59_1 = or i1 %icmp_ln59_3, i1 %icmp_ln59_2" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 74 'or' 'or_ln59_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 75 [1/1] (0.76ns)   --->   "%icmp_ln59_4 = icmp_ne  i8 %tmp_9, i8 255" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 75 'icmp' 'icmp_ln59_4' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 76 [1/1] (0.92ns)   --->   "%icmp_ln59_5 = icmp_eq  i23 %trunc_ln59_2, i23 0" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 76 'icmp' 'icmp_ln59_5' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node and_ln59_2)   --->   "%or_ln59_2 = or i1 %icmp_ln59_5, i1 %icmp_ln59_4" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 77 'or' 'or_ln59_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node and_ln59_2)   --->   "%and_ln59_1 = and i1 %or_ln59_1, i1 %or_ln59_2" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 78 'and' 'and_ln59_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 79 [1/2] (2.78ns)   --->   "%tmp_10 = fcmp_ogt  i32 %pool_value_2, i32 %max_4" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 79 'fcmp' 'tmp_10' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 80 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln59_2 = and i1 %and_ln59_1, i1 %tmp_10" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 80 'and' 'and_ln59_2' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 81 [1/1] (0.44ns) (out node of the LUT)   --->   "%max_6 = select i1 %and_ln59_2, i32 %pool_value_2, i32 %max_4" [Pool.cpp:59->CNN.cpp:43]   --->   Operation 81 'select' 'max_6' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 82 [1/1] (0.77ns)   --->   "%add_ln61_1 = add i8 %zext_ln53, i8 %zext_ln53_1" [Pool.cpp:61->CNN.cpp:43]   --->   Operation 82 'add' 'add_ln61_1' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "%zext_ln61 = zext i8 %add_ln61_1" [Pool.cpp:61->CNN.cpp:43]   --->   Operation 83 'zext' 'zext_ln61' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 84 [1/1] (0.77ns)   --->   "%add_ln61 = add i10 %zext_ln61, i10 %p_shl40_cast" [Pool.cpp:61->CNN.cpp:43]   --->   Operation 84 'add' 'add_ln61' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 85 [1/1] (0.00ns)   --->   "%zext_ln62 = zext i10 %add_ln61" [Pool.cpp:62->CNN.cpp:43]   --->   Operation 85 'zext' 'zext_ln62' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%OutPool2_addr = getelementptr i32 %OutPool2, i64 0, i64 %zext_ln62" [Pool.cpp:62->CNN.cpp:43]   --->   Operation 86 'getelementptr' 'OutPool2_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (1.23ns)   --->   "%store_ln62 = store i32 %max_6, i10 %OutPool2_addr" [Pool.cpp:62->CNN.cpp:43]   --->   Operation 87 'store' 'store_ln62' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 640> <RAM>
ST_4 : Operation 88 [1/1] (0.00ns)   --->   "%br_ln53 = br void %VITIS_LOOP_55_1.i" [Pool.cpp:53->CNN.cpp:43]   --->   Operation 88 'br' 'br_ln53' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 4.452ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln50', Pool.cpp:50->CNN.cpp:43) of constant 0 on local variable 'z', Pool.cpp:50->CNN.cpp:43 [7]  (0.427 ns)
	'load' operation 5 bit ('z_load', Pool.cpp:50->CNN.cpp:43) on local variable 'z', Pool.cpp:50->CNN.cpp:43 [17]  (0.000 ns)
	'add' operation 5 bit ('add_ln50_1', Pool.cpp:50->CNN.cpp:43) [22]  (0.789 ns)
	'select' operation 5 bit ('select_ln50_1', Pool.cpp:50->CNN.cpp:43) [23]  (0.414 ns)
	'add' operation 11 bit ('empty_132', Pool.cpp:50->CNN.cpp:43) [29]  (0.787 ns)
	'add' operation 11 bit ('add_ln57', Pool.cpp:57->CNN.cpp:43) [38]  (0.798 ns)
	'getelementptr' operation 11 bit ('OutConv5_addr', Pool.cpp:58->CNN.cpp:43) [40]  (0.000 ns)
	'load' operation 32 bit ('pool_value', Pool.cpp:58->CNN.cpp:43) on array 'OutConv5' [41]  (1.237 ns)

 <State 2>: 4.019ns
The critical path consists of the following:
	'load' operation 32 bit ('pool_value', Pool.cpp:58->CNN.cpp:43) on array 'OutConv5' [41]  (1.237 ns)
	'fcmp' operation 1 bit ('tmp_7', Pool.cpp:59->CNN.cpp:43) [48]  (2.782 ns)

 <State 3>: 6.013ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_7', Pool.cpp:59->CNN.cpp:43) [48]  (2.782 ns)
	'and' operation 1 bit ('and_ln59', Pool.cpp:59->CNN.cpp:43) [49]  (0.000 ns)
	'select' operation 32 bit ('max', Pool.cpp:59->CNN.cpp:43) [50]  (0.449 ns)
	'fcmp' operation 1 bit ('tmp_10', Pool.cpp:59->CNN.cpp:43) [69]  (2.782 ns)

 <State 4>: 4.755ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_10', Pool.cpp:59->CNN.cpp:43) [69]  (2.782 ns)
	'and' operation 1 bit ('and_ln59_2', Pool.cpp:59->CNN.cpp:43) [70]  (0.287 ns)
	'select' operation 32 bit ('max', Pool.cpp:59->CNN.cpp:43) [71]  (0.449 ns)
	'store' operation 0 bit ('store_ln62', Pool.cpp:62->CNN.cpp:43) of variable 'max', Pool.cpp:59->CNN.cpp:43 on array 'OutPool2' [77]  (1.237 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
