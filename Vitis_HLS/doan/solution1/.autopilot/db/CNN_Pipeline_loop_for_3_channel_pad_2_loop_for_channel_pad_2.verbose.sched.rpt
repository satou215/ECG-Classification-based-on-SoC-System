

================================================================
== Vitis HLS Report for 'CNN_Pipeline_loop_for_3_channel_pad_2_loop_for_channel_pad_2'
================================================================
* Date:           Sat Jun  1 06:31:05 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        doan
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck26-sfvc784-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.363 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      658|      658|  6.580 us|  6.580 us|  658|  658|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                     Loop Name                     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- loop_for_3_channel_pad_2_loop_for_channel_pad_2  |      656|      656|         2|          1|          1|   656|       yes|
        +---------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.36>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%n = alloca i32 1" [Conv.cpp:57->CNN.cpp:34]   --->   Operation 5 'alloca' 'n' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%c = alloca i32 1" [Conv.cpp:55->CNN.cpp:34]   --->   Operation 6 'alloca' 'c' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%indvar_flatten27 = alloca i32 1"   --->   Operation 7 'alloca' 'indvar_flatten27' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.42ns)   --->   "%store_ln0 = store i10 0, i10 %indvar_flatten27"   --->   Operation 8 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 9 [1/1] (0.42ns)   --->   "%store_ln55 = store i3 0, i3 %c" [Conv.cpp:55->CNN.cpp:34]   --->   Operation 9 'store' 'store_ln55' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 10 [1/1] (0.42ns)   --->   "%store_ln57 = store i8 0, i8 %n" [Conv.cpp:57->CNN.cpp:34]   --->   Operation 10 'store' 'store_ln57' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body4.i49"   --->   Operation 11 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%indvar_flatten27_load = load i10 %indvar_flatten27" [Conv.cpp:55->CNN.cpp:34]   --->   Operation 12 'load' 'indvar_flatten27_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.78ns)   --->   "%icmp_ln55 = icmp_eq  i10 %indvar_flatten27_load, i10 656" [Conv.cpp:55->CNN.cpp:34]   --->   Operation 13 'icmp' 'icmp_ln55' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.78ns)   --->   "%add_ln55 = add i10 %indvar_flatten27_load, i10 1" [Conv.cpp:55->CNN.cpp:34]   --->   Operation 14 'add' 'add_ln55' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln55 = br i1 %icmp_ln55, void %for.inc15.i60, void %loop_for_fc_2.i.preheader.exitStub" [Conv.cpp:55->CNN.cpp:34]   --->   Operation 15 'br' 'br_ln55' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%n_load = load i8 %n" [Conv.cpp:57->CNN.cpp:34]   --->   Operation 16 'load' 'n_load' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%c_load = load i3 %c" [Conv.cpp:55->CNN.cpp:34]   --->   Operation 17 'load' 'c_load' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.76ns)   --->   "%icmp_ln57 = icmp_eq  i8 %n_load, i8 164" [Conv.cpp:57->CNN.cpp:34]   --->   Operation 18 'icmp' 'icmp_ln57' <Predicate = (!icmp_ln55)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.39ns)   --->   "%select_ln55 = select i1 %icmp_ln57, i8 0, i8 %n_load" [Conv.cpp:55->CNN.cpp:34]   --->   Operation 19 'select' 'select_ln55' <Predicate = (!icmp_ln55)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.67ns)   --->   "%add_ln55_1 = add i3 %c_load, i3 1" [Conv.cpp:55->CNN.cpp:34]   --->   Operation 20 'add' 'add_ln55_1' <Predicate = (!icmp_ln55)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.20ns)   --->   "%select_ln55_1 = select i1 %icmp_ln57, i3 %add_ln55_1, i3 %c_load" [Conv.cpp:55->CNN.cpp:34]   --->   Operation 21 'select' 'select_ln55_1' <Predicate = (!icmp_ln55)> <Delay = 0.20> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.20> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%empty_140 = trunc i3 %select_ln55_1" [Conv.cpp:55->CNN.cpp:34]   --->   Operation 22 'trunc' 'empty_140' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln57_1 = zext i8 %select_ln55" [Conv.cpp:57->CNN.cpp:34]   --->   Operation 23 'zext' 'zext_ln57_1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%tmp = partselect i7 @_ssdm_op_PartSelect.i7.i8.i32.i32, i8 %select_ln55, i32 1, i32 7" [Conv.cpp:58->CNN.cpp:34]   --->   Operation 24 'partselect' 'tmp' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.77ns)   --->   "%icmp_ln58 = icmp_eq  i7 %tmp, i7 0" [Conv.cpp:58->CNN.cpp:34]   --->   Operation 25 'icmp' 'icmp_ln58' <Predicate = (!icmp_ln55)> <Delay = 0.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%tmp5 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i2.i2.i5, i2 %empty_140, i2 %empty_140, i5 0" [Conv.cpp:58->CNN.cpp:34]   --->   Operation 26 'bitconcatenate' 'tmp5' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln58_1 = zext i9 %tmp5" [Conv.cpp:58->CNN.cpp:34]   --->   Operation 27 'zext' 'zext_ln58_1' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.76ns)   --->   "%add_ln58_1 = add i9 %zext_ln57_1, i9 510" [Conv.cpp:58->CNN.cpp:34]   --->   Operation 28 'add' 'add_ln58_1' <Predicate = (!icmp_ln55)> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%sext_ln58 = sext i9 %add_ln58_1" [Conv.cpp:58->CNN.cpp:34]   --->   Operation 29 'sext' 'sext_ln58' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.77ns)   --->   "%add_ln58_2 = add i10 %sext_ln58, i10 %zext_ln58_1" [Conv.cpp:58->CNN.cpp:34]   --->   Operation 30 'add' 'add_ln58_2' <Predicate = (!icmp_ln55)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln58_2 = zext i10 %add_ln58_2" [Conv.cpp:58->CNN.cpp:34]   --->   Operation 31 'zext' 'zext_ln58_2' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%OutPool0_addr = getelementptr i32 %OutPool0, i64 0, i64 %zext_ln58_2" [Conv.cpp:58->CNN.cpp:34]   --->   Operation 32 'getelementptr' 'OutPool0_addr' <Predicate = (!icmp_ln55)> <Delay = 0.00>
ST_1 : Operation 33 [2/2] (1.23ns)   --->   "%OutPool0_load = load i10 %OutPool0_addr" [Conv.cpp:58->CNN.cpp:34]   --->   Operation 33 'load' 'OutPool0_load' <Predicate = (!icmp_ln55)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 640> <RAM>
ST_1 : Operation 34 [1/1] (0.76ns)   --->   "%add_ln57 = add i8 %select_ln55, i8 1" [Conv.cpp:57->CNN.cpp:34]   --->   Operation 34 'add' 'add_ln57' <Predicate = (!icmp_ln55)> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.42ns)   --->   "%store_ln55 = store i10 %add_ln55, i10 %indvar_flatten27" [Conv.cpp:55->CNN.cpp:34]   --->   Operation 35 'store' 'store_ln55' <Predicate = (!icmp_ln55)> <Delay = 0.42>
ST_1 : Operation 36 [1/1] (0.42ns)   --->   "%store_ln55 = store i3 %select_ln55_1, i3 %c" [Conv.cpp:55->CNN.cpp:34]   --->   Operation 36 'store' 'store_ln55' <Predicate = (!icmp_ln55)> <Delay = 0.42>
ST_1 : Operation 37 [1/1] (0.42ns)   --->   "%store_ln57 = store i8 %add_ln57, i8 %n" [Conv.cpp:57->CNN.cpp:34]   --->   Operation 37 'store' 'store_ln57' <Predicate = (!icmp_ln55)> <Delay = 0.42>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 54 'ret' 'ret_ln0' <Predicate = (icmp_ln55)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.75>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @loop_for_3_channel_pad_2_loop_for_channel_pad_2_str"   --->   Operation 38 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 656, i64 656, i64 656"   --->   Operation 39 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%c_1_cast = zext i3 %select_ln55_1" [Conv.cpp:55->CNN.cpp:34]   --->   Operation 40 'zext' 'c_1_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (1.74ns)   --->   "%empty = mul i9 %c_1_cast, i9 164" [Conv.cpp:55->CNN.cpp:34]   --->   Operation 41 'mul' 'empty' <Predicate = true> <Delay = 1.74> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.74> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%p_cast66_cast = zext i9 %empty" [Conv.cpp:55->CNN.cpp:34]   --->   Operation 42 'zext' 'p_cast66_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln57 = zext i8 %select_ln55" [Conv.cpp:57->CNN.cpp:34]   --->   Operation 43 'zext' 'zext_ln57' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%specpipeline_ln57 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_7" [Conv.cpp:57->CNN.cpp:34]   --->   Operation 44 'specpipeline' 'specpipeline_ln57' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.76ns)   --->   "%icmp_ln58_1 = icmp_ugt  i8 %select_ln55, i8 161" [Conv.cpp:58->CNN.cpp:34]   --->   Operation 45 'icmp' 'icmp_ln58_1' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node select_ln58)   --->   "%or_ln58 = or i1 %icmp_ln58, i1 %icmp_ln58_1" [Conv.cpp:58->CNN.cpp:34]   --->   Operation 46 'or' 'or_ln58' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.77ns)   --->   "%add_ln58 = add i10 %zext_ln57, i10 %p_cast66_cast" [Conv.cpp:58->CNN.cpp:34]   --->   Operation 47 'add' 'add_ln58' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln58 = zext i10 %add_ln58" [Conv.cpp:58->CNN.cpp:34]   --->   Operation 48 'zext' 'zext_ln58' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%OutPadConv2_addr = getelementptr i32 %OutPadConv2, i64 0, i64 %zext_ln58" [Conv.cpp:58->CNN.cpp:34]   --->   Operation 49 'getelementptr' 'OutPadConv2_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/2] (1.23ns)   --->   "%OutPool0_load = load i10 %OutPool0_addr" [Conv.cpp:58->CNN.cpp:34]   --->   Operation 50 'load' 'OutPool0_load' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 640> <RAM>
ST_2 : Operation 51 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln58 = select i1 %or_ln58, i32 0, i32 %OutPool0_load" [Conv.cpp:58->CNN.cpp:34]   --->   Operation 51 'select' 'select_ln58' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (1.23ns)   --->   "%store_ln58 = store i32 %select_ln58, i10 %OutPadConv2_addr" [Conv.cpp:58->CNN.cpp:34]   --->   Operation 52 'store' 'store_ln58' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM_1WnR">   --->   Core 84 'RAM_1WnR' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 17> <Width = 32> <Depth = 656> <RAM>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%br_ln57 = br void %for.body4.i49" [Conv.cpp:57->CNN.cpp:34]   --->   Operation 53 'br' 'br_ln57' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 4.363ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln57', Conv.cpp:57->CNN.cpp:34) of constant 0 on local variable 'n', Conv.cpp:57->CNN.cpp:34 [8]  (0.427 ns)
	'load' operation 8 bit ('n_load', Conv.cpp:57->CNN.cpp:34) on local variable 'n', Conv.cpp:57->CNN.cpp:34 [16]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln57', Conv.cpp:57->CNN.cpp:34) [20]  (0.765 ns)
	'select' operation 8 bit ('select_ln55', Conv.cpp:55->CNN.cpp:34) [21]  (0.393 ns)
	'add' operation 9 bit ('add_ln58_1', Conv.cpp:58->CNN.cpp:34) [40]  (0.765 ns)
	'add' operation 10 bit ('add_ln58_2', Conv.cpp:58->CNN.cpp:34) [42]  (0.776 ns)
	'getelementptr' operation 10 bit ('OutPool0_addr', Conv.cpp:58->CNN.cpp:34) [44]  (0.000 ns)
	'load' operation 32 bit ('OutPool0_load', Conv.cpp:58->CNN.cpp:34) on array 'OutPool0' [45]  (1.237 ns)

 <State 2>: 3.753ns
The critical path consists of the following:
	'mul' operation 9 bit ('empty', Conv.cpp:55->CNN.cpp:34) [25]  (1.740 ns)
	'add' operation 10 bit ('add_ln58', Conv.cpp:58->CNN.cpp:34) [35]  (0.776 ns)
	'getelementptr' operation 10 bit ('OutPadConv2_addr', Conv.cpp:58->CNN.cpp:34) [37]  (0.000 ns)
	'store' operation 0 bit ('store_ln58', Conv.cpp:58->CNN.cpp:34) of variable 'select_ln58', Conv.cpp:58->CNN.cpp:34 on array 'OutPadConv2' [47]  (1.237 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
