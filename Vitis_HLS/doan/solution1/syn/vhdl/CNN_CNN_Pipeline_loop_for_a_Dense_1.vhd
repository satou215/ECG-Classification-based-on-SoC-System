-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity CNN_CNN_Pipeline_loop_for_a_Dense_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    Weights_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    Weights_ce0 : OUT STD_LOGIC;
    Weights_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Weights_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    Weights_ce1 : OUT STD_LOGIC;
    Weights_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    OutDense0_load : IN STD_LOGIC_VECTOR (31 downto 0);
    OutDense0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    OutDense0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    OutDense0_load_3 : IN STD_LOGIC_VECTOR (31 downto 0);
    OutDense0_load_4 : IN STD_LOGIC_VECTOR (31 downto 0);
    OutDense0_load_5 : IN STD_LOGIC_VECTOR (31 downto 0);
    OutDense0_load_6 : IN STD_LOGIC_VECTOR (31 downto 0);
    OutDense0_load_7 : IN STD_LOGIC_VECTOR (31 downto 0);
    OutDense0_load_8 : IN STD_LOGIC_VECTOR (31 downto 0);
    OutDense0_load_9 : IN STD_LOGIC_VECTOR (31 downto 0);
    OutDense0_load_10 : IN STD_LOGIC_VECTOR (31 downto 0);
    OutDense0_load_11 : IN STD_LOGIC_VECTOR (31 downto 0);
    OutDense0_load_12 : IN STD_LOGIC_VECTOR (31 downto 0);
    OutDense0_load_13 : IN STD_LOGIC_VECTOR (31 downto 0);
    OutDense0_load_14 : IN STD_LOGIC_VECTOR (31 downto 0);
    OutDense0_load_15 : IN STD_LOGIC_VECTOR (31 downto 0);
    OutDense0_load_16 : IN STD_LOGIC_VECTOR (31 downto 0);
    OutDense0_load_17 : IN STD_LOGIC_VECTOR (31 downto 0);
    OutDense0_load_18 : IN STD_LOGIC_VECTOR (31 downto 0);
    OutDense0_load_19 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_Dense_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    out_Dense_ce0 : OUT STD_LOGIC;
    out_Dense_we0 : OUT STD_LOGIC;
    out_Dense_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1453_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1453_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1453_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_1453_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1453_p_ce : OUT STD_LOGIC;
    grp_fu_1457_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1457_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1457_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_1457_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1457_p_ce : OUT STD_LOGIC;
    grp_fu_1461_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1461_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1461_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1461_p_ce : OUT STD_LOGIC;
    grp_fu_1465_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1465_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1465_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_1465_p_ce : OUT STD_LOGIC );
end;


architecture behav of CNN_CNN_Pipeline_loop_for_a_Dense_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv11_55A : STD_LOGIC_VECTOR (10 downto 0) := "10101011010";
    constant ap_const_lv14_2AD5 : STD_LOGIC_VECTOR (13 downto 0) := "10101011010101";
    constant ap_const_lv14_2ADA : STD_LOGIC_VECTOR (13 downto 0) := "10101011011010";
    constant ap_const_lv14_2ADF : STD_LOGIC_VECTOR (13 downto 0) := "10101011011111";
    constant ap_const_lv14_2AE4 : STD_LOGIC_VECTOR (13 downto 0) := "10101011100100";
    constant ap_const_lv14_2AE9 : STD_LOGIC_VECTOR (13 downto 0) := "10101011101001";
    constant ap_const_lv14_2AEE : STD_LOGIC_VECTOR (13 downto 0) := "10101011101110";
    constant ap_const_lv14_2AF3 : STD_LOGIC_VECTOR (13 downto 0) := "10101011110011";
    constant ap_const_lv11_55F : STD_LOGIC_VECTOR (10 downto 0) := "10101011111";
    constant ap_const_lv14_2AFD : STD_LOGIC_VECTOR (13 downto 0) := "10101011111101";
    constant ap_const_lv14_2B02 : STD_LOGIC_VECTOR (13 downto 0) := "10101100000010";
    constant ap_const_lv14_2B07 : STD_LOGIC_VECTOR (13 downto 0) := "10101100000111";
    constant ap_const_lv14_2B0C : STD_LOGIC_VECTOR (13 downto 0) := "10101100001100";
    constant ap_const_lv14_2B11 : STD_LOGIC_VECTOR (13 downto 0) := "10101100010001";
    constant ap_const_lv14_2B16 : STD_LOGIC_VECTOR (13 downto 0) := "10101100010110";
    constant ap_const_lv14_2B1B : STD_LOGIC_VECTOR (13 downto 0) := "10101100011011";
    constant ap_const_lv11_564 : STD_LOGIC_VECTOR (10 downto 0) := "10101100100";
    constant ap_const_lv14_2B25 : STD_LOGIC_VECTOR (13 downto 0) := "10101100100101";
    constant ap_const_lv14_2B2A : STD_LOGIC_VECTOR (13 downto 0) := "10101100101010";
    constant ap_const_lv14_2B2F : STD_LOGIC_VECTOR (13 downto 0) := "10101100101111";
    constant ap_const_lv14_2B34 : STD_LOGIC_VECTOR (13 downto 0) := "10101100110100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal icmp_ln15_1_reg_976 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage10 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal reg_454 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal reg_458 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_462 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_467 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_472 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_477 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_482 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_487 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_492 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_497 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_502 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_1_reg_969 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_1_reg_969_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal i_1_reg_969_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal i_1_reg_969_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal i_1_reg_969_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal i_1_reg_969_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal i_1_reg_969_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal i_1_reg_969_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln15_1_fu_515_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln15_1_reg_976_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln15_1_reg_976_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln15_1_reg_976_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln15_1_reg_976_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln15_1_reg_976_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln15_1_reg_976_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln15_1_fu_527_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln15_1_reg_980 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln15_1_reg_980_pp0_iter1_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln15_1_reg_980_pp0_iter2_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln15_1_reg_980_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln15_1_reg_980_pp0_iter4_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln15_1_reg_980_pp0_iter5_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln15_1_reg_980_pp0_iter6_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal bitcast_ln19_fu_580_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln19_1_fu_585_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln19_2_fu_610_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln19_3_fu_615_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i1_reg_1061 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_1_reg_1066 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln19_4_fu_640_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln19_5_fu_645_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_2_reg_1091 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_3_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_3_reg_1096_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln19_6_fu_672_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln19_7_fu_677_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_4_reg_1121 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_4_reg_1121_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_5_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_5_reg_1126_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln19_8_fu_702_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln19_9_fu_707_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_6_reg_1151 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_6_reg_1151_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_7_reg_1156 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_7_reg_1156_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_7_reg_1156_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln19_10_fu_732_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln19_11_fu_737_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_8_reg_1181 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_8_reg_1181_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_8_reg_1181_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_9_reg_1186 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_9_reg_1186_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_9_reg_1186_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln19_12_fu_762_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln19_13_fu_767_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_s_reg_1211 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_s_reg_1211_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_s_reg_1211_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_s_reg_1211_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_10_reg_1216 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_10_reg_1216_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_10_reg_1216_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_10_reg_1216_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln19_14_fu_794_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln19_15_fu_799_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_11_reg_1241 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_11_reg_1241_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_11_reg_1241_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_11_reg_1241_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_12_reg_1246 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_12_reg_1246_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_12_reg_1246_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_12_reg_1246_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_12_reg_1246_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln19_16_fu_824_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln19_17_fu_829_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_13_reg_1261 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_13_reg_1261_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_13_reg_1261_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_13_reg_1261_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_13_reg_1261_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_14_reg_1266 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_14_reg_1266_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_14_reg_1266_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_14_reg_1266_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_14_reg_1266_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln19_18_fu_834_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln19_19_fu_839_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_15_reg_1281 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_15_reg_1281_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_15_reg_1281_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_15_reg_1281_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_15_reg_1281_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_15_reg_1281_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_16_reg_1286 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_16_reg_1286_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_16_reg_1286_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_16_reg_1286_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_16_reg_1286_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_16_reg_1286_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_17_reg_1291 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_17_reg_1291_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_17_reg_1291_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_17_reg_1291_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_17_reg_1291_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_17_reg_1291_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_18_reg_1296 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_18_reg_1296_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_18_reg_1296_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_18_reg_1296_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_18_reg_1296_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_18_reg_1296_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul7_i398_18_reg_1296_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal s_10_reg_1301 : STD_LOGIC_VECTOR (31 downto 0);
    signal Weights_load_20_reg_1311 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_19_reg_1316 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln21_fu_854_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln19_fu_539_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln19_1_fu_550_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_2_fu_565_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln19_3_fu_575_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_4_fu_595_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln19_5_fu_605_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_6_fu_625_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln19_7_fu_635_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_8_fu_657_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln19_9_fu_667_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_10_fu_687_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal zext_ln19_11_fu_697_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_12_fu_717_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal zext_ln19_13_fu_727_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_14_fu_747_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal zext_ln19_15_fu_757_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_16_fu_779_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal zext_ln19_17_fu_789_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln19_18_fu_809_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal zext_ln19_19_fu_819_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln21_fu_849_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal zext_ln15_fu_858_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_122 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal add_ln15_fu_521_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_436_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_436_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_441_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_441_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_446_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_446_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_450_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_450_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln19_cast_fu_531_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_fu_544_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_1_fu_560_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_2_fu_570_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_3_fu_590_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_4_fu_600_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_5_fu_620_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_6_fu_630_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln19_8_cast_fu_650_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_7_fu_662_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_8_fu_682_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_9_fu_692_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_10_fu_712_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_11_fu_722_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_12_fu_742_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_13_fu_752_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln19_16_cast_fu_772_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_14_fu_784_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_15_fu_804_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln19_16_fu_814_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln21_fu_844_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter7_stage0 : STD_LOGIC;
    signal ap_idle_pp0_0to6 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_idle_pp0_1to8 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_block_pp0_stage5_00001 : BOOLEAN;
    signal ap_block_pp0_stage9_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage6_00001 : BOOLEAN;
    signal ap_block_pp0_stage10_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage7_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_block_pp0_stage8_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component CNN_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component CNN_fmul_32ns_32ns_32_3_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component CNN_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component CNN_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage10,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage10)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage0))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage0))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage0))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage0))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage0))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage0))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage0))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    i_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln15_1_fu_515_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_122 <= add_ln15_fu_521_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_122 <= ap_const_lv3_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                Weights_load_20_reg_1311 <= Weights_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_1_reg_969 <= ap_sig_allocacmp_i_1;
                i_1_reg_969_pp0_iter1_reg <= i_1_reg_969;
                i_1_reg_969_pp0_iter2_reg <= i_1_reg_969_pp0_iter1_reg;
                i_1_reg_969_pp0_iter3_reg <= i_1_reg_969_pp0_iter2_reg;
                i_1_reg_969_pp0_iter4_reg <= i_1_reg_969_pp0_iter3_reg;
                i_1_reg_969_pp0_iter5_reg <= i_1_reg_969_pp0_iter4_reg;
                i_1_reg_969_pp0_iter6_reg <= i_1_reg_969_pp0_iter5_reg;
                i_1_reg_969_pp0_iter7_reg <= i_1_reg_969_pp0_iter6_reg;
                icmp_ln15_1_reg_976 <= icmp_ln15_1_fu_515_p2;
                icmp_ln15_1_reg_976_pp0_iter1_reg <= icmp_ln15_1_reg_976;
                icmp_ln15_1_reg_976_pp0_iter2_reg <= icmp_ln15_1_reg_976_pp0_iter1_reg;
                icmp_ln15_1_reg_976_pp0_iter3_reg <= icmp_ln15_1_reg_976_pp0_iter2_reg;
                icmp_ln15_1_reg_976_pp0_iter4_reg <= icmp_ln15_1_reg_976_pp0_iter3_reg;
                icmp_ln15_1_reg_976_pp0_iter5_reg <= icmp_ln15_1_reg_976_pp0_iter4_reg;
                icmp_ln15_1_reg_976_pp0_iter6_reg <= icmp_ln15_1_reg_976_pp0_iter5_reg;
                mul7_i398_13_reg_1261_pp0_iter2_reg <= mul7_i398_13_reg_1261;
                mul7_i398_13_reg_1261_pp0_iter3_reg <= mul7_i398_13_reg_1261_pp0_iter2_reg;
                mul7_i398_13_reg_1261_pp0_iter4_reg <= mul7_i398_13_reg_1261_pp0_iter3_reg;
                mul7_i398_13_reg_1261_pp0_iter5_reg <= mul7_i398_13_reg_1261_pp0_iter4_reg;
                mul7_i398_14_reg_1266_pp0_iter2_reg <= mul7_i398_14_reg_1266;
                mul7_i398_14_reg_1266_pp0_iter3_reg <= mul7_i398_14_reg_1266_pp0_iter2_reg;
                mul7_i398_14_reg_1266_pp0_iter4_reg <= mul7_i398_14_reg_1266_pp0_iter3_reg;
                mul7_i398_14_reg_1266_pp0_iter5_reg <= mul7_i398_14_reg_1266_pp0_iter4_reg;
                    zext_ln15_1_reg_980(2 downto 0) <= zext_ln15_1_fu_527_p1(2 downto 0);
                    zext_ln15_1_reg_980_pp0_iter1_reg(2 downto 0) <= zext_ln15_1_reg_980(2 downto 0);
                    zext_ln15_1_reg_980_pp0_iter2_reg(2 downto 0) <= zext_ln15_1_reg_980_pp0_iter1_reg(2 downto 0);
                    zext_ln15_1_reg_980_pp0_iter3_reg(2 downto 0) <= zext_ln15_1_reg_980_pp0_iter2_reg(2 downto 0);
                    zext_ln15_1_reg_980_pp0_iter4_reg(2 downto 0) <= zext_ln15_1_reg_980_pp0_iter3_reg(2 downto 0);
                    zext_ln15_1_reg_980_pp0_iter5_reg(2 downto 0) <= zext_ln15_1_reg_980_pp0_iter4_reg(2 downto 0);
                    zext_ln15_1_reg_980_pp0_iter6_reg(2 downto 0) <= zext_ln15_1_reg_980_pp0_iter5_reg(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                mul7_i1_reg_1061 <= grp_fu_1461_p_dout0;
                mul7_i398_1_reg_1066 <= grp_fu_1465_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then
                mul7_i398_10_reg_1216 <= grp_fu_1465_p_dout0;
                mul7_i398_s_reg_1211 <= grp_fu_1461_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then
                mul7_i398_10_reg_1216_pp0_iter1_reg <= mul7_i398_10_reg_1216;
                mul7_i398_10_reg_1216_pp0_iter2_reg <= mul7_i398_10_reg_1216_pp0_iter1_reg;
                mul7_i398_10_reg_1216_pp0_iter3_reg <= mul7_i398_10_reg_1216_pp0_iter2_reg;
                mul7_i398_s_reg_1211_pp0_iter1_reg <= mul7_i398_s_reg_1211;
                mul7_i398_s_reg_1211_pp0_iter2_reg <= mul7_i398_s_reg_1211_pp0_iter1_reg;
                mul7_i398_s_reg_1211_pp0_iter3_reg <= mul7_i398_s_reg_1211_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then
                mul7_i398_11_reg_1241 <= grp_fu_1461_p_dout0;
                mul7_i398_12_reg_1246 <= grp_fu_1465_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then
                mul7_i398_11_reg_1241_pp0_iter1_reg <= mul7_i398_11_reg_1241;
                mul7_i398_11_reg_1241_pp0_iter2_reg <= mul7_i398_11_reg_1241_pp0_iter1_reg;
                mul7_i398_11_reg_1241_pp0_iter3_reg <= mul7_i398_11_reg_1241_pp0_iter2_reg;
                mul7_i398_12_reg_1246_pp0_iter1_reg <= mul7_i398_12_reg_1246;
                mul7_i398_12_reg_1246_pp0_iter2_reg <= mul7_i398_12_reg_1246_pp0_iter1_reg;
                mul7_i398_12_reg_1246_pp0_iter3_reg <= mul7_i398_12_reg_1246_pp0_iter2_reg;
                mul7_i398_12_reg_1246_pp0_iter4_reg <= mul7_i398_12_reg_1246_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul7_i398_13_reg_1261 <= grp_fu_1461_p_dout0;
                mul7_i398_14_reg_1266 <= grp_fu_1465_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul7_i398_15_reg_1281 <= grp_fu_1461_p_dout0;
                mul7_i398_16_reg_1286 <= grp_fu_1465_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul7_i398_15_reg_1281_pp0_iter2_reg <= mul7_i398_15_reg_1281;
                mul7_i398_15_reg_1281_pp0_iter3_reg <= mul7_i398_15_reg_1281_pp0_iter2_reg;
                mul7_i398_15_reg_1281_pp0_iter4_reg <= mul7_i398_15_reg_1281_pp0_iter3_reg;
                mul7_i398_15_reg_1281_pp0_iter5_reg <= mul7_i398_15_reg_1281_pp0_iter4_reg;
                mul7_i398_15_reg_1281_pp0_iter6_reg <= mul7_i398_15_reg_1281_pp0_iter5_reg;
                mul7_i398_16_reg_1286_pp0_iter2_reg <= mul7_i398_16_reg_1286;
                mul7_i398_16_reg_1286_pp0_iter3_reg <= mul7_i398_16_reg_1286_pp0_iter2_reg;
                mul7_i398_16_reg_1286_pp0_iter4_reg <= mul7_i398_16_reg_1286_pp0_iter3_reg;
                mul7_i398_16_reg_1286_pp0_iter5_reg <= mul7_i398_16_reg_1286_pp0_iter4_reg;
                mul7_i398_16_reg_1286_pp0_iter6_reg <= mul7_i398_16_reg_1286_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul7_i398_17_reg_1291 <= grp_fu_1461_p_dout0;
                mul7_i398_18_reg_1296 <= grp_fu_1465_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul7_i398_17_reg_1291_pp0_iter2_reg <= mul7_i398_17_reg_1291;
                mul7_i398_17_reg_1291_pp0_iter3_reg <= mul7_i398_17_reg_1291_pp0_iter2_reg;
                mul7_i398_17_reg_1291_pp0_iter4_reg <= mul7_i398_17_reg_1291_pp0_iter3_reg;
                mul7_i398_17_reg_1291_pp0_iter5_reg <= mul7_i398_17_reg_1291_pp0_iter4_reg;
                mul7_i398_17_reg_1291_pp0_iter6_reg <= mul7_i398_17_reg_1291_pp0_iter5_reg;
                mul7_i398_18_reg_1296_pp0_iter2_reg <= mul7_i398_18_reg_1296;
                mul7_i398_18_reg_1296_pp0_iter3_reg <= mul7_i398_18_reg_1296_pp0_iter2_reg;
                mul7_i398_18_reg_1296_pp0_iter4_reg <= mul7_i398_18_reg_1296_pp0_iter3_reg;
                mul7_i398_18_reg_1296_pp0_iter5_reg <= mul7_i398_18_reg_1296_pp0_iter4_reg;
                mul7_i398_18_reg_1296_pp0_iter6_reg <= mul7_i398_18_reg_1296_pp0_iter5_reg;
                mul7_i398_18_reg_1296_pp0_iter7_reg <= mul7_i398_18_reg_1296_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                mul7_i398_2_reg_1091 <= grp_fu_1461_p_dout0;
                mul7_i398_3_reg_1096 <= grp_fu_1465_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                mul7_i398_3_reg_1096_pp0_iter1_reg <= mul7_i398_3_reg_1096;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                mul7_i398_4_reg_1121 <= grp_fu_1461_p_dout0;
                mul7_i398_5_reg_1126 <= grp_fu_1465_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                mul7_i398_4_reg_1121_pp0_iter1_reg <= mul7_i398_4_reg_1121;
                mul7_i398_5_reg_1126_pp0_iter1_reg <= mul7_i398_5_reg_1126;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                mul7_i398_6_reg_1151 <= grp_fu_1461_p_dout0;
                mul7_i398_7_reg_1156 <= grp_fu_1465_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                mul7_i398_6_reg_1151_pp0_iter1_reg <= mul7_i398_6_reg_1151;
                mul7_i398_7_reg_1156_pp0_iter1_reg <= mul7_i398_7_reg_1156;
                mul7_i398_7_reg_1156_pp0_iter2_reg <= mul7_i398_7_reg_1156_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                mul7_i398_8_reg_1181 <= grp_fu_1461_p_dout0;
                mul7_i398_9_reg_1186 <= grp_fu_1465_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                mul7_i398_8_reg_1181_pp0_iter1_reg <= mul7_i398_8_reg_1181;
                mul7_i398_8_reg_1181_pp0_iter2_reg <= mul7_i398_8_reg_1181_pp0_iter1_reg;
                mul7_i398_9_reg_1186_pp0_iter1_reg <= mul7_i398_9_reg_1186;
                mul7_i398_9_reg_1186_pp0_iter2_reg <= mul7_i398_9_reg_1186_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_454 <= Weights_q1;
                reg_458 <= Weights_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_462 <= grp_fu_1453_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then
                reg_467 <= grp_fu_1453_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then
                reg_472 <= grp_fu_1453_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_477 <= grp_fu_1453_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then
                reg_482 <= grp_fu_1453_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_487 <= grp_fu_1457_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then
                reg_492 <= grp_fu_1457_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then
                reg_497 <= grp_fu_1457_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then
                reg_502 <= grp_fu_1457_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                s_10_reg_1301 <= grp_fu_1453_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                s_19_reg_1316 <= grp_fu_1457_p_dout0;
            end if;
        end if;
    end process;
    zext_ln15_1_reg_980(13 downto 3) <= "00000000000";
    zext_ln15_1_reg_980_pp0_iter1_reg(13 downto 3) <= "00000000000";
    zext_ln15_1_reg_980_pp0_iter2_reg(13 downto 3) <= "00000000000";
    zext_ln15_1_reg_980_pp0_iter3_reg(13 downto 3) <= "00000000000";
    zext_ln15_1_reg_980_pp0_iter4_reg(13 downto 3) <= "00000000000";
    zext_ln15_1_reg_980_pp0_iter5_reg(13 downto 3) <= "00000000000";
    zext_ln15_1_reg_980_pp0_iter6_reg(13 downto 3) <= "00000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage10_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter7_stage0, ap_idle_pp0_0to6, ap_idle_pp0_1to8, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_idle_pp0_1to8 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;

    Weights_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage0, zext_ln19_1_fu_550_p1, ap_block_pp0_stage1, zext_ln19_3_fu_575_p1, ap_block_pp0_stage2, zext_ln19_5_fu_605_p1, ap_block_pp0_stage3, zext_ln19_7_fu_635_p1, ap_block_pp0_stage4, zext_ln19_9_fu_667_p1, ap_block_pp0_stage5, zext_ln19_11_fu_697_p1, ap_block_pp0_stage6, zext_ln19_13_fu_727_p1, ap_block_pp0_stage7, zext_ln19_15_fu_757_p1, ap_block_pp0_stage8, zext_ln19_17_fu_789_p1, ap_block_pp0_stage9, zext_ln19_19_fu_819_p1, zext_ln21_fu_849_p1, ap_block_pp0_stage10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            Weights_address0 <= zext_ln21_fu_849_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            Weights_address0 <= zext_ln19_19_fu_819_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            Weights_address0 <= zext_ln19_17_fu_789_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            Weights_address0 <= zext_ln19_15_fu_757_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            Weights_address0 <= zext_ln19_13_fu_727_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            Weights_address0 <= zext_ln19_11_fu_697_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            Weights_address0 <= zext_ln19_9_fu_667_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            Weights_address0 <= zext_ln19_7_fu_635_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            Weights_address0 <= zext_ln19_5_fu_605_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            Weights_address0 <= zext_ln19_3_fu_575_p1(14 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Weights_address0 <= zext_ln19_1_fu_550_p1(14 - 1 downto 0);
        else 
            Weights_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    Weights_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, zext_ln19_fu_539_p1, ap_block_pp0_stage0, zext_ln19_2_fu_565_p1, ap_block_pp0_stage1, zext_ln19_4_fu_595_p1, ap_block_pp0_stage2, zext_ln19_6_fu_625_p1, ap_block_pp0_stage3, zext_ln19_8_fu_657_p1, ap_block_pp0_stage4, zext_ln19_10_fu_687_p1, ap_block_pp0_stage5, zext_ln19_12_fu_717_p1, ap_block_pp0_stage6, zext_ln19_14_fu_747_p1, ap_block_pp0_stage7, zext_ln19_16_fu_779_p1, ap_block_pp0_stage8, zext_ln19_18_fu_809_p1, ap_block_pp0_stage9)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                Weights_address1 <= zext_ln19_18_fu_809_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                Weights_address1 <= zext_ln19_16_fu_779_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                Weights_address1 <= zext_ln19_14_fu_747_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                Weights_address1 <= zext_ln19_12_fu_717_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                Weights_address1 <= zext_ln19_10_fu_687_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                Weights_address1 <= zext_ln19_8_fu_657_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                Weights_address1 <= zext_ln19_6_fu_625_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                Weights_address1 <= zext_ln19_4_fu_595_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                Weights_address1 <= zext_ln19_2_fu_565_p1(14 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                Weights_address1 <= zext_ln19_fu_539_p1(14 - 1 downto 0);
            else 
                Weights_address1 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            Weights_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    Weights_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            Weights_ce0 <= ap_const_logic_1;
        else 
            Weights_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Weights_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) 
    or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            Weights_ce1 <= ap_const_logic_1;
        else 
            Weights_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln15_fu_521_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_1) + unsigned(ap_const_lv3_1));
    add_ln19_10_fu_712_p2 <= std_logic_vector(unsigned(zext_ln15_1_reg_980) + unsigned(ap_const_lv14_2B0C));
    add_ln19_11_fu_722_p2 <= std_logic_vector(unsigned(zext_ln15_1_reg_980) + unsigned(ap_const_lv14_2B11));
    add_ln19_12_fu_742_p2 <= std_logic_vector(unsigned(zext_ln15_1_reg_980) + unsigned(ap_const_lv14_2B16));
    add_ln19_13_fu_752_p2 <= std_logic_vector(unsigned(zext_ln15_1_reg_980) + unsigned(ap_const_lv14_2B1B));
    add_ln19_14_fu_784_p2 <= std_logic_vector(unsigned(zext_ln15_1_reg_980) + unsigned(ap_const_lv14_2B25));
    add_ln19_15_fu_804_p2 <= std_logic_vector(unsigned(zext_ln15_1_reg_980) + unsigned(ap_const_lv14_2B2A));
    add_ln19_16_fu_814_p2 <= std_logic_vector(unsigned(zext_ln15_1_reg_980) + unsigned(ap_const_lv14_2B2F));
    add_ln19_1_fu_560_p2 <= std_logic_vector(unsigned(zext_ln15_1_reg_980) + unsigned(ap_const_lv14_2ADA));
    add_ln19_2_fu_570_p2 <= std_logic_vector(unsigned(zext_ln15_1_reg_980) + unsigned(ap_const_lv14_2ADF));
    add_ln19_3_fu_590_p2 <= std_logic_vector(unsigned(zext_ln15_1_reg_980) + unsigned(ap_const_lv14_2AE4));
    add_ln19_4_fu_600_p2 <= std_logic_vector(unsigned(zext_ln15_1_reg_980) + unsigned(ap_const_lv14_2AE9));
    add_ln19_5_fu_620_p2 <= std_logic_vector(unsigned(zext_ln15_1_reg_980) + unsigned(ap_const_lv14_2AEE));
    add_ln19_6_fu_630_p2 <= std_logic_vector(unsigned(zext_ln15_1_reg_980) + unsigned(ap_const_lv14_2AF3));
    add_ln19_7_fu_662_p2 <= std_logic_vector(unsigned(zext_ln15_1_reg_980) + unsigned(ap_const_lv14_2AFD));
    add_ln19_8_fu_682_p2 <= std_logic_vector(unsigned(zext_ln15_1_reg_980) + unsigned(ap_const_lv14_2B02));
    add_ln19_9_fu_692_p2 <= std_logic_vector(unsigned(zext_ln15_1_reg_980) + unsigned(ap_const_lv14_2B07));
    add_ln19_fu_544_p2 <= std_logic_vector(unsigned(zext_ln15_1_fu_527_p1) + unsigned(ap_const_lv14_2AD5));
    add_ln21_fu_844_p2 <= std_logic_vector(unsigned(zext_ln15_1_reg_980_pp0_iter6_reg) + unsigned(ap_const_lv14_2B34));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage10_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_subdone, icmp_ln15_1_reg_976)
    begin
        if (((icmp_ln15_1_reg_976 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            ap_condition_exit_pp0_iter0_stage10 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter7_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter7, icmp_ln15_1_reg_976_pp0_iter6_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln15_1_reg_976_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter7_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter7_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter7_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to6_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to6 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to8_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to8 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to8 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage10;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage10_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_fu_122, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_1 <= ap_const_lv3_0;
        else 
            ap_sig_allocacmp_i_1 <= i_fu_122;
        end if; 
    end process;

    bitcast_ln19_10_fu_732_p1 <= reg_454;
    bitcast_ln19_11_fu_737_p1 <= reg_458;
    bitcast_ln19_12_fu_762_p1 <= reg_454;
    bitcast_ln19_13_fu_767_p1 <= reg_458;
    bitcast_ln19_14_fu_794_p1 <= reg_454;
    bitcast_ln19_15_fu_799_p1 <= reg_458;
    bitcast_ln19_16_fu_824_p1 <= reg_454;
    bitcast_ln19_17_fu_829_p1 <= reg_458;
    bitcast_ln19_18_fu_834_p1 <= reg_454;
    bitcast_ln19_19_fu_839_p1 <= reg_458;
    bitcast_ln19_1_fu_585_p1 <= reg_458;
    bitcast_ln19_2_fu_610_p1 <= reg_454;
    bitcast_ln19_3_fu_615_p1 <= reg_458;
    bitcast_ln19_4_fu_640_p1 <= reg_454;
    bitcast_ln19_5_fu_645_p1 <= reg_458;
    bitcast_ln19_6_fu_672_p1 <= reg_454;
    bitcast_ln19_7_fu_677_p1 <= reg_458;
    bitcast_ln19_8_fu_702_p1 <= reg_454;
    bitcast_ln19_9_fu_707_p1 <= reg_458;
    bitcast_ln19_fu_580_p1 <= reg_454;
    bitcast_ln21_fu_854_p1 <= Weights_load_20_reg_1311;
    grp_fu_1453_p_ce <= ap_const_logic_1;
    grp_fu_1453_p_din0 <= grp_fu_436_p0;
    grp_fu_1453_p_din1 <= grp_fu_436_p1;
    grp_fu_1453_p_opcode <= ap_const_lv2_0;
    grp_fu_1457_p_ce <= ap_const_logic_1;
    grp_fu_1457_p_din0 <= grp_fu_441_p0;
    grp_fu_1457_p_din1 <= grp_fu_441_p1;
    grp_fu_1457_p_opcode <= ap_const_lv2_0;
    grp_fu_1461_p_ce <= ap_const_logic_1;
    grp_fu_1461_p_din0 <= grp_fu_446_p0;
    grp_fu_1461_p_din1 <= grp_fu_446_p1;
    grp_fu_1465_p_ce <= ap_const_logic_1;
    grp_fu_1465_p_din0 <= grp_fu_450_p0;
    grp_fu_1465_p_din1 <= grp_fu_450_p1;

    grp_fu_436_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, reg_462, reg_467, reg_472, reg_477, reg_482, mul7_i1_reg_1061, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_436_p0 <= reg_482;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_436_p0 <= reg_477;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_436_p0 <= reg_472;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_436_p0 <= reg_467;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_436_p0 <= reg_462;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_436_p0 <= mul7_i1_reg_1061;
        else 
            grp_fu_436_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_436_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, mul7_i398_1_reg_1066, mul7_i398_2_reg_1091, mul7_i398_3_reg_1096_pp0_iter1_reg, mul7_i398_4_reg_1121_pp0_iter1_reg, mul7_i398_5_reg_1126_pp0_iter1_reg, mul7_i398_6_reg_1151_pp0_iter1_reg, mul7_i398_7_reg_1156_pp0_iter2_reg, mul7_i398_8_reg_1181_pp0_iter2_reg, mul7_i398_9_reg_1186_pp0_iter2_reg, mul7_i398_s_reg_1211_pp0_iter3_reg, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_436_p1 <= mul7_i398_s_reg_1211_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_436_p1 <= mul7_i398_9_reg_1186_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_436_p1 <= mul7_i398_8_reg_1181_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_436_p1 <= mul7_i398_7_reg_1156_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_436_p1 <= mul7_i398_6_reg_1151_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_436_p1 <= mul7_i398_5_reg_1126_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_436_p1 <= mul7_i398_4_reg_1121_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_436_p1 <= mul7_i398_3_reg_1096_pp0_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_436_p1 <= mul7_i398_2_reg_1091;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_436_p1 <= mul7_i398_1_reg_1066;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_436_p1 <= ap_const_lv32_0;
        else 
            grp_fu_436_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_441_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, reg_487, reg_492, reg_497, reg_502, s_10_reg_1301, s_19_reg_1316, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_441_p0 <= s_19_reg_1316;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_441_p0 <= reg_502;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_441_p0 <= reg_497;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_441_p0 <= reg_492;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_441_p0 <= reg_487;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_441_p0 <= s_10_reg_1301;
        else 
            grp_fu_441_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_441_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, mul7_i398_10_reg_1216_pp0_iter3_reg, mul7_i398_11_reg_1241_pp0_iter3_reg, mul7_i398_12_reg_1246_pp0_iter4_reg, mul7_i398_13_reg_1261_pp0_iter5_reg, mul7_i398_14_reg_1266_pp0_iter5_reg, mul7_i398_15_reg_1281_pp0_iter6_reg, mul7_i398_16_reg_1286_pp0_iter6_reg, mul7_i398_17_reg_1291_pp0_iter6_reg, mul7_i398_18_reg_1296_pp0_iter7_reg, bitcast_ln21_fu_854_p1, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_441_p1 <= bitcast_ln21_fu_854_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_441_p1 <= mul7_i398_18_reg_1296_pp0_iter7_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_441_p1 <= mul7_i398_17_reg_1291_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_441_p1 <= mul7_i398_16_reg_1286_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_441_p1 <= mul7_i398_15_reg_1281_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_441_p1 <= mul7_i398_14_reg_1266_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_441_p1 <= mul7_i398_13_reg_1261_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_441_p1 <= mul7_i398_12_reg_1246_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_441_p1 <= mul7_i398_11_reg_1241_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_441_p1 <= mul7_i398_10_reg_1216_pp0_iter3_reg;
        else 
            grp_fu_441_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_446_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage10, OutDense0_load, OutDense0_load_2, OutDense0_load_4, OutDense0_load_6, OutDense0_load_8, OutDense0_load_10, OutDense0_load_12, OutDense0_load_14, OutDense0_load_16, OutDense0_load_18, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_446_p0 <= OutDense0_load_18;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_446_p0 <= OutDense0_load_16;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_446_p0 <= OutDense0_load_14;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_446_p0 <= OutDense0_load_12;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_446_p0 <= OutDense0_load_10;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_446_p0 <= OutDense0_load_8;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_446_p0 <= OutDense0_load_6;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_446_p0 <= OutDense0_load_4;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_446_p0 <= OutDense0_load_2;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_446_p0 <= OutDense0_load;
        else 
            grp_fu_446_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_446_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, bitcast_ln19_fu_580_p1, bitcast_ln19_2_fu_610_p1, bitcast_ln19_4_fu_640_p1, bitcast_ln19_6_fu_672_p1, bitcast_ln19_8_fu_702_p1, bitcast_ln19_10_fu_732_p1, bitcast_ln19_12_fu_762_p1, bitcast_ln19_14_fu_794_p1, bitcast_ln19_16_fu_824_p1, bitcast_ln19_18_fu_834_p1, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_446_p1 <= bitcast_ln19_18_fu_834_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_446_p1 <= bitcast_ln19_16_fu_824_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_446_p1 <= bitcast_ln19_14_fu_794_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_446_p1 <= bitcast_ln19_12_fu_762_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_446_p1 <= bitcast_ln19_10_fu_732_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_446_p1 <= bitcast_ln19_8_fu_702_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_446_p1 <= bitcast_ln19_6_fu_672_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_446_p1 <= bitcast_ln19_4_fu_640_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_446_p1 <= bitcast_ln19_2_fu_610_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_446_p1 <= bitcast_ln19_fu_580_p1;
        else 
            grp_fu_446_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_450_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage10, OutDense0_load_1, OutDense0_load_3, OutDense0_load_5, OutDense0_load_7, OutDense0_load_9, OutDense0_load_11, OutDense0_load_13, OutDense0_load_15, OutDense0_load_17, OutDense0_load_19, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_450_p0 <= OutDense0_load_19;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_450_p0 <= OutDense0_load_17;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_450_p0 <= OutDense0_load_15;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_450_p0 <= OutDense0_load_13;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_450_p0 <= OutDense0_load_11;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_450_p0 <= OutDense0_load_9;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_450_p0 <= OutDense0_load_7;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_450_p0 <= OutDense0_load_5;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_450_p0 <= OutDense0_load_3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_450_p0 <= OutDense0_load_1;
        else 
            grp_fu_450_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_450_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, bitcast_ln19_1_fu_585_p1, bitcast_ln19_3_fu_615_p1, bitcast_ln19_5_fu_645_p1, bitcast_ln19_7_fu_677_p1, bitcast_ln19_9_fu_707_p1, bitcast_ln19_11_fu_737_p1, bitcast_ln19_13_fu_767_p1, bitcast_ln19_15_fu_799_p1, bitcast_ln19_17_fu_829_p1, bitcast_ln19_19_fu_839_p1, ap_block_pp0_stage0, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_450_p1 <= bitcast_ln19_19_fu_839_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
            grp_fu_450_p1 <= bitcast_ln19_17_fu_829_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_450_p1 <= bitcast_ln19_15_fu_799_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_450_p1 <= bitcast_ln19_13_fu_767_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_450_p1 <= bitcast_ln19_11_fu_737_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_450_p1 <= bitcast_ln19_9_fu_707_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_450_p1 <= bitcast_ln19_7_fu_677_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_450_p1 <= bitcast_ln19_5_fu_645_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_450_p1 <= bitcast_ln19_3_fu_615_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_450_p1 <= bitcast_ln19_1_fu_585_p1;
        else 
            grp_fu_450_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln15_1_fu_515_p2 <= "1" when (ap_sig_allocacmp_i_1 = ap_const_lv3_5) else "0";
    out_Dense_address0 <= zext_ln15_fu_858_p1(3 - 1 downto 0);

    out_Dense_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_Dense_ce0 <= ap_const_logic_1;
        else 
            out_Dense_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_Dense_d0 <= grp_fu_1457_p_dout0;

    out_Dense_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter8, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_Dense_we0 <= ap_const_logic_1;
        else 
            out_Dense_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln15_1_fu_527_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_i_1),14));
    zext_ln15_fu_858_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_1_reg_969_pp0_iter7_reg),64));
    zext_ln19_10_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_8_fu_682_p2),64));
    zext_ln19_11_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_9_fu_692_p2),64));
    zext_ln19_12_fu_717_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_10_fu_712_p2),64));
    zext_ln19_13_fu_727_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_11_fu_722_p2),64));
    zext_ln19_14_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_12_fu_742_p2),64));
    zext_ln19_15_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_13_fu_752_p2),64));
    zext_ln19_16_cast_fu_772_p3 <= (ap_const_lv11_564 & i_1_reg_969);
    zext_ln19_16_fu_779_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln19_16_cast_fu_772_p3),64));
    zext_ln19_17_fu_789_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_14_fu_784_p2),64));
    zext_ln19_18_fu_809_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_15_fu_804_p2),64));
    zext_ln19_19_fu_819_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_16_fu_814_p2),64));
    zext_ln19_1_fu_550_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_fu_544_p2),64));
    zext_ln19_2_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_1_fu_560_p2),64));
    zext_ln19_3_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_2_fu_570_p2),64));
    zext_ln19_4_fu_595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_3_fu_590_p2),64));
    zext_ln19_5_fu_605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_4_fu_600_p2),64));
    zext_ln19_6_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_5_fu_620_p2),64));
    zext_ln19_7_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_6_fu_630_p2),64));
    zext_ln19_8_cast_fu_650_p3 <= (ap_const_lv11_55F & i_1_reg_969);
    zext_ln19_8_fu_657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln19_8_cast_fu_650_p3),64));
    zext_ln19_9_fu_667_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln19_7_fu_662_p2),64));
    zext_ln19_cast_fu_531_p3 <= (ap_const_lv11_55A & ap_sig_allocacmp_i_1);
    zext_ln19_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln19_cast_fu_531_p3),64));
    zext_ln21_fu_849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln21_fu_844_p2),64));
end behav;
