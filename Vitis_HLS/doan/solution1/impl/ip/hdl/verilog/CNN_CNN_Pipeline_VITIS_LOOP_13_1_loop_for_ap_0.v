// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module CNN_CNN_Pipeline_VITIS_LOOP_13_1_loop_for_ap_0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Weights_address0,
        Weights_ce0,
        Weights_q0,
        Weights_address1,
        Weights_ce1,
        Weights_q1,
        OutPadConv0_address0,
        OutPadConv0_ce0,
        OutPadConv0_q0,
        OutPadConv0_address1,
        OutPadConv0_ce1,
        OutPadConv0_q1,
        OutConv0_address0,
        OutConv0_ce0,
        OutConv0_we0,
        OutConv0_d0,
        grp_fu_1453_p_din0,
        grp_fu_1453_p_din1,
        grp_fu_1453_p_opcode,
        grp_fu_1453_p_dout0,
        grp_fu_1453_p_ce,
        grp_fu_1457_p_din0,
        grp_fu_1457_p_din1,
        grp_fu_1457_p_opcode,
        grp_fu_1457_p_dout0,
        grp_fu_1457_p_ce,
        grp_fu_1461_p_din0,
        grp_fu_1461_p_din1,
        grp_fu_1461_p_dout0,
        grp_fu_1461_p_ce,
        grp_fu_1465_p_din0,
        grp_fu_1465_p_din1,
        grp_fu_1465_p_dout0,
        grp_fu_1465_p_ce,
        grp_fu_1469_p_din0,
        grp_fu_1469_p_din1,
        grp_fu_1469_p_opcode,
        grp_fu_1469_p_dout0,
        grp_fu_1469_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] Weights_address0;
output   Weights_ce0;
input  [31:0] Weights_q0;
output  [13:0] Weights_address1;
output   Weights_ce1;
input  [31:0] Weights_q1;
output  [8:0] OutPadConv0_address0;
output   OutPadConv0_ce0;
input  [31:0] OutPadConv0_q0;
output  [8:0] OutPadConv0_address1;
output   OutPadConv0_ce1;
input  [31:0] OutPadConv0_q1;
output  [10:0] OutConv0_address0;
output   OutConv0_ce0;
output   OutConv0_we0;
output  [31:0] OutConv0_d0;
output  [31:0] grp_fu_1453_p_din0;
output  [31:0] grp_fu_1453_p_din1;
output  [1:0] grp_fu_1453_p_opcode;
input  [31:0] grp_fu_1453_p_dout0;
output   grp_fu_1453_p_ce;
output  [31:0] grp_fu_1457_p_din0;
output  [31:0] grp_fu_1457_p_din1;
output  [1:0] grp_fu_1457_p_opcode;
input  [31:0] grp_fu_1457_p_dout0;
output   grp_fu_1457_p_ce;
output  [31:0] grp_fu_1461_p_din0;
output  [31:0] grp_fu_1461_p_din1;
input  [31:0] grp_fu_1461_p_dout0;
output   grp_fu_1461_p_ce;
output  [31:0] grp_fu_1465_p_din0;
output  [31:0] grp_fu_1465_p_din1;
input  [31:0] grp_fu_1465_p_dout0;
output   grp_fu_1465_p_ce;
output  [31:0] grp_fu_1469_p_din0;
output  [31:0] grp_fu_1469_p_din1;
output  [4:0] grp_fu_1469_p_opcode;
input  [0:0] grp_fu_1469_p_dout0;
output   grp_fu_1469_p_ce;

reg ap_idle;
reg[13:0] Weights_address0;
reg Weights_ce0;
reg[13:0] Weights_address1;
reg Weights_ce1;
reg[8:0] OutPadConv0_address0;
reg OutPadConv0_ce0;
reg[8:0] OutPadConv0_address1;
reg OutPadConv0_ce1;
reg OutConv0_ce0;
reg OutConv0_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln13_reg_600;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_239;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
wire    ap_block_pp0_stage2_11001;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] reg_243;
wire   [0:0] icmp_ln13_fu_265_p2;
reg   [0:0] icmp_ln13_reg_600_pp0_iter1_reg;
reg   [0:0] icmp_ln13_reg_600_pp0_iter2_reg;
reg   [0:0] icmp_ln13_reg_600_pp0_iter3_reg;
reg   [0:0] icmp_ln13_reg_600_pp0_iter4_reg;
reg   [0:0] icmp_ln13_reg_600_pp0_iter5_reg;
reg   [0:0] icmp_ln13_reg_600_pp0_iter6_reg;
reg   [0:0] icmp_ln13_reg_600_pp0_iter7_reg;
reg   [0:0] icmp_ln13_reg_600_pp0_iter8_reg;
wire   [8:0] select_ln13_fu_289_p3;
reg   [8:0] select_ln13_reg_604;
reg   [8:0] select_ln13_reg_604_pp0_iter1_reg;
reg   [8:0] select_ln13_reg_604_pp0_iter2_reg;
reg   [8:0] select_ln13_reg_604_pp0_iter3_reg;
reg   [8:0] select_ln13_reg_604_pp0_iter4_reg;
reg   [8:0] select_ln13_reg_604_pp0_iter5_reg;
reg   [8:0] select_ln13_reg_604_pp0_iter6_reg;
reg   [8:0] select_ln13_reg_604_pp0_iter7_reg;
reg   [8:0] select_ln13_reg_604_pp0_iter8_reg;
reg   [8:0] select_ln13_reg_604_pp0_iter9_reg;
wire   [2:0] select_ln13_1_fu_303_p3;
reg   [2:0] select_ln13_1_reg_612;
reg   [2:0] select_ln13_1_reg_612_pp0_iter1_reg;
reg   [2:0] select_ln13_1_reg_612_pp0_iter2_reg;
reg   [2:0] select_ln13_1_reg_612_pp0_iter3_reg;
reg   [2:0] select_ln13_1_reg_612_pp0_iter4_reg;
reg   [2:0] select_ln13_1_reg_612_pp0_iter5_reg;
reg   [2:0] select_ln13_1_reg_612_pp0_iter6_reg;
reg   [2:0] select_ln13_1_reg_612_pp0_iter7_reg;
wire   [1:0] empty_fu_315_p1;
reg   [1:0] empty_reg_617;
reg   [1:0] empty_reg_617_pp0_iter1_reg;
reg   [1:0] empty_reg_617_pp0_iter2_reg;
reg   [1:0] empty_reg_617_pp0_iter3_reg;
reg   [1:0] empty_reg_617_pp0_iter4_reg;
reg   [1:0] empty_reg_617_pp0_iter5_reg;
reg   [1:0] empty_reg_617_pp0_iter6_reg;
reg   [1:0] empty_reg_617_pp0_iter7_reg;
reg   [1:0] empty_reg_617_pp0_iter8_reg;
reg   [1:0] empty_reg_617_pp0_iter9_reg;
wire   [4:0] p_cast_fu_338_p1;
reg   [4:0] p_cast_reg_623;
reg   [31:0] OutPadConv0_load_reg_650;
reg   [31:0] OutPadConv0_load_1_reg_655;
wire   [31:0] bitcast_ln21_fu_424_p1;
wire   [31:0] bitcast_ln21_1_fu_429_p1;
reg   [31:0] OutPadConv0_load_2_reg_690;
reg   [31:0] OutPadConv0_load_3_reg_695;
wire   [31:0] bitcast_ln21_2_fu_454_p1;
wire   [31:0] bitcast_ln21_3_fu_459_p1;
reg   [31:0] OutPadConv0_load_4_reg_720;
reg   [31:0] mul21_i_reg_725;
reg   [31:0] mul21_i_1_reg_730;
reg   [31:0] mul21_i_1_reg_730_pp0_iter2_reg;
wire   [31:0] bitcast_ln21_4_fu_464_p1;
reg   [31:0] mul21_i_2_reg_740;
reg   [31:0] mul21_i_2_reg_740_pp0_iter2_reg;
reg   [31:0] mul21_i_2_reg_740_pp0_iter3_reg;
reg   [31:0] mul21_i_3_reg_745;
reg   [31:0] mul21_i_3_reg_745_pp0_iter2_reg;
reg   [31:0] mul21_i_3_reg_745_pp0_iter3_reg;
reg   [31:0] mul21_i_3_reg_745_pp0_iter4_reg;
reg   [31:0] mul21_i_4_reg_750;
reg   [31:0] mul21_i_4_reg_750_pp0_iter3_reg;
reg   [31:0] mul21_i_4_reg_750_pp0_iter4_reg;
reg   [31:0] mul21_i_4_reg_750_pp0_iter5_reg;
reg   [31:0] mul21_i_4_reg_750_pp0_iter6_reg;
reg   [31:0] s_reg_755;
reg   [31:0] s_1_reg_760;
reg   [31:0] s_2_reg_765;
reg   [31:0] s_3_reg_770;
reg   [31:0] s_4_reg_780;
wire   [31:0] empty_155_fu_483_p1;
reg   [31:0] add28_i_reg_790;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] p_cast136_fu_333_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln15_fu_342_p1;
wire   [63:0] zext_ln21_1_fu_353_p1;
wire   [63:0] zext_ln21_2_fu_364_p1;
wire   [63:0] zext_ln21_3_fu_389_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln21_4_fu_399_p1;
wire   [63:0] zext_ln21_5_fu_409_p1;
wire   [63:0] zext_ln21_6_fu_419_p1;
wire   [63:0] zext_ln21_7_fu_439_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln21_8_fu_449_p1;
wire   [63:0] arrayidx3_sum_cast_fu_478_p1;
wire   [63:0] zext_ln23_1_fu_566_p1;
reg   [8:0] y_fu_86;
wire   [8:0] add_ln21_1_fu_358_p2;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_y_load;
reg   [2:0] n_1_fu_90;
reg   [2:0] ap_sig_allocacmp_n_1_load;
reg   [10:0] indvar_flatten_fu_94;
wire   [10:0] add_ln13_fu_271_p2;
reg   [10:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [31:0] grp_fu_217_p0;
reg   [31:0] grp_fu_217_p1;
reg   [31:0] grp_fu_222_p0;
reg   [31:0] grp_fu_222_p1;
reg   [31:0] grp_fu_226_p0;
reg   [31:0] grp_fu_226_p1;
reg   [31:0] grp_fu_230_p0;
reg   [31:0] grp_fu_230_p1;
wire   [0:0] icmp_ln15_fu_283_p2;
wire   [2:0] add_ln13_2_fu_297_p2;
wire   [3:0] p_shl2_fu_319_p3;
wire   [3:0] zext_ln13_1_fu_311_p1;
wire   [3:0] empty_154_fu_327_p2;
wire   [4:0] add_ln21_fu_347_p2;
wire   [4:0] add_ln21_2_fu_384_p2;
wire   [8:0] add_ln21_3_fu_394_p2;
wire   [4:0] add_ln21_4_fu_404_p2;
wire   [8:0] add_ln21_5_fu_414_p2;
wire   [4:0] add_ln21_6_fu_434_p2;
wire   [8:0] add_ln21_7_fu_444_p2;
wire   [4:0] zext_ln13_fu_469_p1;
wire   [4:0] arrayidx3_sum_fu_472_p2;
wire   [9:0] p_shl_fu_488_p3;
wire   [7:0] p_shl1_fu_499_p3;
wire   [31:0] bitcast_ln23_fu_510_p1;
wire   [7:0] tmp_1_fu_513_p4;
wire   [22:0] trunc_ln23_fu_523_p1;
wire   [0:0] icmp_ln23_1_fu_533_p2;
wire   [0:0] icmp_ln23_fu_527_p2;
wire   [0:0] or_ln23_fu_539_p2;
wire   [8:0] zext_ln21_fu_506_p1;
wire   [8:0] add_ln23_1_fu_551_p2;
wire   [10:0] zext_ln23_fu_556_p1;
wire   [10:0] p_shl_cast_fu_495_p1;
wire   [10:0] add_ln23_fu_560_p2;
wire   [0:0] and_ln23_fu_545_p2;
wire    ap_block_pp0_stage2_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter9_stage0;
reg    ap_idle_pp0_0to8;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0_1to10;
wire    ap_block_pp0_stage1_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 y_fu_86 = 9'd0;
#0 n_1_fu_90 = 3'd0;
#0 indvar_flatten_fu_94 = 11'd0;
#0 ap_done_reg = 1'b0;
end

CNN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln13_fu_265_p2 == 1'd0))) begin
            indvar_flatten_fu_94 <= add_ln13_fu_271_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_94 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln13_fu_265_p2 == 1'd0))) begin
            n_1_fu_90 <= select_ln13_1_fu_303_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            n_1_fu_90 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln13_fu_265_p2 == 1'd0))) begin
            y_fu_86 <= add_ln21_1_fu_358_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            y_fu_86 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        OutPadConv0_load_1_reg_655 <= OutPadConv0_q0;
        OutPadConv0_load_reg_650 <= OutPadConv0_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        OutPadConv0_load_2_reg_690 <= OutPadConv0_q1;
        OutPadConv0_load_3_reg_695 <= OutPadConv0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPadConv0_load_4_reg_720 <= OutPadConv0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add28_i_reg_790 <= grp_fu_1457_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_reg_617 <= empty_fu_315_p1;
        empty_reg_617_pp0_iter1_reg <= empty_reg_617;
        empty_reg_617_pp0_iter2_reg <= empty_reg_617_pp0_iter1_reg;
        empty_reg_617_pp0_iter3_reg <= empty_reg_617_pp0_iter2_reg;
        empty_reg_617_pp0_iter4_reg <= empty_reg_617_pp0_iter3_reg;
        empty_reg_617_pp0_iter5_reg <= empty_reg_617_pp0_iter4_reg;
        empty_reg_617_pp0_iter6_reg <= empty_reg_617_pp0_iter5_reg;
        empty_reg_617_pp0_iter7_reg <= empty_reg_617_pp0_iter6_reg;
        empty_reg_617_pp0_iter8_reg <= empty_reg_617_pp0_iter7_reg;
        empty_reg_617_pp0_iter9_reg <= empty_reg_617_pp0_iter8_reg;
        icmp_ln13_reg_600 <= icmp_ln13_fu_265_p2;
        icmp_ln13_reg_600_pp0_iter1_reg <= icmp_ln13_reg_600;
        icmp_ln13_reg_600_pp0_iter2_reg <= icmp_ln13_reg_600_pp0_iter1_reg;
        icmp_ln13_reg_600_pp0_iter3_reg <= icmp_ln13_reg_600_pp0_iter2_reg;
        icmp_ln13_reg_600_pp0_iter4_reg <= icmp_ln13_reg_600_pp0_iter3_reg;
        icmp_ln13_reg_600_pp0_iter5_reg <= icmp_ln13_reg_600_pp0_iter4_reg;
        icmp_ln13_reg_600_pp0_iter6_reg <= icmp_ln13_reg_600_pp0_iter5_reg;
        icmp_ln13_reg_600_pp0_iter7_reg <= icmp_ln13_reg_600_pp0_iter6_reg;
        icmp_ln13_reg_600_pp0_iter8_reg <= icmp_ln13_reg_600_pp0_iter7_reg;
        mul21_i_4_reg_750_pp0_iter3_reg <= mul21_i_4_reg_750;
        mul21_i_4_reg_750_pp0_iter4_reg <= mul21_i_4_reg_750_pp0_iter3_reg;
        mul21_i_4_reg_750_pp0_iter5_reg <= mul21_i_4_reg_750_pp0_iter4_reg;
        mul21_i_4_reg_750_pp0_iter6_reg <= mul21_i_4_reg_750_pp0_iter5_reg;
        p_cast_reg_623[3 : 0] <= p_cast_fu_338_p1[3 : 0];
        select_ln13_1_reg_612 <= select_ln13_1_fu_303_p3;
        select_ln13_1_reg_612_pp0_iter1_reg <= select_ln13_1_reg_612;
        select_ln13_1_reg_612_pp0_iter2_reg <= select_ln13_1_reg_612_pp0_iter1_reg;
        select_ln13_1_reg_612_pp0_iter3_reg <= select_ln13_1_reg_612_pp0_iter2_reg;
        select_ln13_1_reg_612_pp0_iter4_reg <= select_ln13_1_reg_612_pp0_iter3_reg;
        select_ln13_1_reg_612_pp0_iter5_reg <= select_ln13_1_reg_612_pp0_iter4_reg;
        select_ln13_1_reg_612_pp0_iter6_reg <= select_ln13_1_reg_612_pp0_iter5_reg;
        select_ln13_1_reg_612_pp0_iter7_reg <= select_ln13_1_reg_612_pp0_iter6_reg;
        select_ln13_reg_604 <= select_ln13_fu_289_p3;
        select_ln13_reg_604_pp0_iter1_reg <= select_ln13_reg_604;
        select_ln13_reg_604_pp0_iter2_reg <= select_ln13_reg_604_pp0_iter1_reg;
        select_ln13_reg_604_pp0_iter3_reg <= select_ln13_reg_604_pp0_iter2_reg;
        select_ln13_reg_604_pp0_iter4_reg <= select_ln13_reg_604_pp0_iter3_reg;
        select_ln13_reg_604_pp0_iter5_reg <= select_ln13_reg_604_pp0_iter4_reg;
        select_ln13_reg_604_pp0_iter6_reg <= select_ln13_reg_604_pp0_iter5_reg;
        select_ln13_reg_604_pp0_iter7_reg <= select_ln13_reg_604_pp0_iter6_reg;
        select_ln13_reg_604_pp0_iter8_reg <= select_ln13_reg_604_pp0_iter7_reg;
        select_ln13_reg_604_pp0_iter9_reg <= select_ln13_reg_604_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul21_i_1_reg_730 <= grp_fu_1465_p_dout0;
        mul21_i_reg_725 <= grp_fu_1461_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul21_i_1_reg_730_pp0_iter2_reg <= mul21_i_1_reg_730;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul21_i_2_reg_740 <= grp_fu_1461_p_dout0;
        mul21_i_3_reg_745 <= grp_fu_1465_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul21_i_2_reg_740_pp0_iter2_reg <= mul21_i_2_reg_740;
        mul21_i_2_reg_740_pp0_iter3_reg <= mul21_i_2_reg_740_pp0_iter2_reg;
        mul21_i_3_reg_745_pp0_iter2_reg <= mul21_i_3_reg_745;
        mul21_i_3_reg_745_pp0_iter3_reg <= mul21_i_3_reg_745_pp0_iter2_reg;
        mul21_i_3_reg_745_pp0_iter4_reg <= mul21_i_3_reg_745_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul21_i_4_reg_750 <= grp_fu_1461_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_239 <= Weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_243 <= Weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_1_reg_760 <= grp_fu_1453_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        s_2_reg_765 <= grp_fu_1453_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        s_3_reg_770 <= grp_fu_1457_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_4_reg_780 <= grp_fu_1457_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        s_reg_755 <= grp_fu_1453_p_dout0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutConv0_ce0 = 1'b1;
    end else begin
        OutConv0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutConv0_we0 = 1'b1;
    end else begin
        OutConv0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            OutPadConv0_address0 = zext_ln21_8_fu_449_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            OutPadConv0_address0 = zext_ln21_6_fu_419_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            OutPadConv0_address0 = zext_ln21_2_fu_364_p1;
        end else begin
            OutPadConv0_address0 = 'bx;
        end
    end else begin
        OutPadConv0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            OutPadConv0_address1 = zext_ln21_4_fu_399_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            OutPadConv0_address1 = zext_ln15_fu_342_p1;
        end else begin
            OutPadConv0_address1 = 'bx;
        end
    end else begin
        OutPadConv0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        OutPadConv0_ce0 = 1'b1;
    end else begin
        OutPadConv0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        OutPadConv0_ce1 = 1'b1;
    end else begin
        OutPadConv0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        Weights_address0 = arrayidx3_sum_cast_fu_478_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Weights_address0 = zext_ln21_5_fu_409_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weights_address0 = zext_ln21_1_fu_353_p1;
    end else begin
        Weights_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            Weights_address1 = zext_ln21_7_fu_439_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            Weights_address1 = zext_ln21_3_fu_389_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Weights_address1 = p_cast136_fu_333_p1;
        end else begin
            Weights_address1 = 'bx;
        end
    end else begin
        Weights_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        Weights_ce0 = 1'b1;
    end else begin
        Weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        Weights_ce1 = 1'b1;
    end else begin
        Weights_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln13_reg_600 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln13_reg_600_pp0_iter8_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter9_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter9_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to8 = 1'b1;
    end else begin
        ap_idle_pp0_0to8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to10 = 1'b1;
    end else begin
        ap_idle_pp0_1to10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_94;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_n_1_load = 3'd0;
    end else begin
        ap_sig_allocacmp_n_1_load = n_1_fu_90;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_y_load = 9'd0;
    end else begin
        ap_sig_allocacmp_y_load = y_fu_86;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_217_p0 = s_1_reg_760;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_217_p0 = s_reg_755;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_217_p0 = mul21_i_reg_725;
    end else begin
        grp_fu_217_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_217_p1 = mul21_i_2_reg_740_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_217_p1 = mul21_i_1_reg_730_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_217_p1 = 32'd0;
    end else begin
        grp_fu_217_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_222_p0 = s_4_reg_780;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_222_p0 = s_3_reg_770;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_222_p0 = s_2_reg_765;
    end else begin
        grp_fu_222_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_222_p1 = empty_155_fu_483_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_222_p1 = mul21_i_4_reg_750_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_222_p1 = mul21_i_3_reg_745_pp0_iter4_reg;
    end else begin
        grp_fu_222_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_226_p0 = bitcast_ln21_4_fu_464_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_226_p0 = bitcast_ln21_2_fu_454_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_226_p0 = bitcast_ln21_fu_424_p1;
    end else begin
        grp_fu_226_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_226_p1 = OutPadConv0_load_4_reg_720;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_226_p1 = OutPadConv0_load_2_reg_690;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_226_p1 = OutPadConv0_load_reg_650;
    end else begin
        grp_fu_226_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_230_p0 = bitcast_ln21_3_fu_459_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_230_p0 = bitcast_ln21_1_fu_429_p1;
    end else begin
        grp_fu_230_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_230_p1 = OutPadConv0_load_3_reg_695;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_230_p1 = OutPadConv0_load_1_reg_655;
    end else begin
        grp_fu_230_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to10 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OutConv0_address0 = zext_ln23_1_fu_566_p1;

assign OutConv0_d0 = ((and_ln23_fu_545_p2[0:0] == 1'b1) ? 32'd0 : add28_i_reg_790);

assign add_ln13_2_fu_297_p2 = (ap_sig_allocacmp_n_1_load + 3'd1);

assign add_ln13_fu_271_p2 = (ap_sig_allocacmp_indvar_flatten_load + 11'd1);

assign add_ln21_1_fu_358_p2 = (select_ln13_fu_289_p3 + 9'd1);

assign add_ln21_2_fu_384_p2 = (p_cast_reg_623 + 5'd2);

assign add_ln21_3_fu_394_p2 = (select_ln13_reg_604 + 9'd2);

assign add_ln21_4_fu_404_p2 = (p_cast_reg_623 + 5'd3);

assign add_ln21_5_fu_414_p2 = (select_ln13_reg_604 + 9'd3);

assign add_ln21_6_fu_434_p2 = (p_cast_reg_623 + 5'd4);

assign add_ln21_7_fu_444_p2 = (select_ln13_reg_604 + 9'd4);

assign add_ln21_fu_347_p2 = (p_cast_fu_338_p1 + 5'd1);

assign add_ln23_1_fu_551_p2 = (zext_ln21_fu_506_p1 + select_ln13_reg_604_pp0_iter9_reg);

assign add_ln23_fu_560_p2 = (zext_ln23_fu_556_p1 + p_shl_cast_fu_495_p1);

assign and_ln23_fu_545_p2 = (or_ln23_fu_539_p2 & grp_fu_1469_p_dout0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign arrayidx3_sum_cast_fu_478_p1 = arrayidx3_sum_fu_472_p2;

assign arrayidx3_sum_fu_472_p2 = ($signed(zext_ln13_fu_469_p1) + $signed(5'd20));

assign bitcast_ln21_1_fu_429_p1 = reg_243;

assign bitcast_ln21_2_fu_454_p1 = reg_239;

assign bitcast_ln21_3_fu_459_p1 = reg_243;

assign bitcast_ln21_4_fu_464_p1 = reg_239;

assign bitcast_ln21_fu_424_p1 = reg_239;

assign bitcast_ln23_fu_510_p1 = add28_i_reg_790;

assign empty_154_fu_327_p2 = (p_shl2_fu_319_p3 + zext_ln13_1_fu_311_p1);

assign empty_155_fu_483_p1 = reg_243;

assign empty_fu_315_p1 = select_ln13_1_fu_303_p3[1:0];

assign grp_fu_1453_p_ce = 1'b1;

assign grp_fu_1453_p_din0 = grp_fu_217_p0;

assign grp_fu_1453_p_din1 = grp_fu_217_p1;

assign grp_fu_1453_p_opcode = 2'd0;

assign grp_fu_1457_p_ce = 1'b1;

assign grp_fu_1457_p_din0 = grp_fu_222_p0;

assign grp_fu_1457_p_din1 = grp_fu_222_p1;

assign grp_fu_1457_p_opcode = 2'd0;

assign grp_fu_1461_p_ce = 1'b1;

assign grp_fu_1461_p_din0 = grp_fu_226_p0;

assign grp_fu_1461_p_din1 = grp_fu_226_p1;

assign grp_fu_1465_p_ce = 1'b1;

assign grp_fu_1465_p_din0 = grp_fu_230_p0;

assign grp_fu_1465_p_din1 = grp_fu_230_p1;

assign grp_fu_1469_p_ce = 1'b1;

assign grp_fu_1469_p_din0 = add28_i_reg_790;

assign grp_fu_1469_p_din1 = 32'd0;

assign grp_fu_1469_p_opcode = 5'd4;

assign icmp_ln13_fu_265_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 11'd1280) ? 1'b1 : 1'b0);

assign icmp_ln15_fu_283_p2 = ((ap_sig_allocacmp_y_load == 9'd320) ? 1'b1 : 1'b0);

assign icmp_ln23_1_fu_533_p2 = ((trunc_ln23_fu_523_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_527_p2 = ((tmp_1_fu_513_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln23_fu_539_p2 = (icmp_ln23_fu_527_p2 | icmp_ln23_1_fu_533_p2);

assign p_cast136_fu_333_p1 = empty_154_fu_327_p2;

assign p_cast_fu_338_p1 = empty_154_fu_327_p2;

assign p_shl1_fu_499_p3 = {{empty_reg_617_pp0_iter9_reg}, {6'd0}};

assign p_shl2_fu_319_p3 = {{empty_fu_315_p1}, {2'd0}};

assign p_shl_cast_fu_495_p1 = p_shl_fu_488_p3;

assign p_shl_fu_488_p3 = {{empty_reg_617_pp0_iter9_reg}, {8'd0}};

assign select_ln13_1_fu_303_p3 = ((icmp_ln15_fu_283_p2[0:0] == 1'b1) ? add_ln13_2_fu_297_p2 : ap_sig_allocacmp_n_1_load);

assign select_ln13_fu_289_p3 = ((icmp_ln15_fu_283_p2[0:0] == 1'b1) ? 9'd0 : ap_sig_allocacmp_y_load);

assign tmp_1_fu_513_p4 = {{bitcast_ln23_fu_510_p1[30:23]}};

assign trunc_ln23_fu_523_p1 = bitcast_ln23_fu_510_p1[22:0];

assign zext_ln13_1_fu_311_p1 = select_ln13_1_fu_303_p3;

assign zext_ln13_fu_469_p1 = select_ln13_1_reg_612_pp0_iter7_reg;

assign zext_ln15_fu_342_p1 = select_ln13_fu_289_p3;

assign zext_ln21_1_fu_353_p1 = add_ln21_fu_347_p2;

assign zext_ln21_2_fu_364_p1 = add_ln21_1_fu_358_p2;

assign zext_ln21_3_fu_389_p1 = add_ln21_2_fu_384_p2;

assign zext_ln21_4_fu_399_p1 = add_ln21_3_fu_394_p2;

assign zext_ln21_5_fu_409_p1 = add_ln21_4_fu_404_p2;

assign zext_ln21_6_fu_419_p1 = add_ln21_5_fu_414_p2;

assign zext_ln21_7_fu_439_p1 = add_ln21_6_fu_434_p2;

assign zext_ln21_8_fu_449_p1 = add_ln21_7_fu_444_p2;

assign zext_ln21_fu_506_p1 = p_shl1_fu_499_p3;

assign zext_ln23_1_fu_566_p1 = add_ln23_fu_560_p2;

assign zext_ln23_fu_556_p1 = add_ln23_1_fu_551_p2;

always @ (posedge ap_clk) begin
    p_cast_reg_623[4] <= 1'b0;
end

endmodule //CNN_CNN_Pipeline_VITIS_LOOP_13_1_loop_for_ap_0
