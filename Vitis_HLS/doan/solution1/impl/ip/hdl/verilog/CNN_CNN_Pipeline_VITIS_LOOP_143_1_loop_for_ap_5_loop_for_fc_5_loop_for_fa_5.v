// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module CNN_CNN_Pipeline_VITIS_LOOP_143_1_loop_for_ap_5_loop_for_fc_5_loop_for_fa_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Weights_address0,
        Weights_ce0,
        Weights_q0,
        Weights_address1,
        Weights_ce1,
        Weights_q1,
        OutPadConv5_address0,
        OutPadConv5_ce0,
        OutPadConv5_q0,
        OutConv5_address0,
        OutConv5_ce0,
        OutConv5_we0,
        OutConv5_d0,
        grp_fu_1453_p_din0,
        grp_fu_1453_p_din1,
        grp_fu_1453_p_opcode,
        grp_fu_1453_p_dout0,
        grp_fu_1453_p_ce,
        grp_fu_1461_p_din0,
        grp_fu_1461_p_din1,
        grp_fu_1461_p_dout0,
        grp_fu_1461_p_ce,
        grp_fu_1469_p_din0,
        grp_fu_1469_p_din1,
        grp_fu_1469_p_opcode,
        grp_fu_1469_p_dout0,
        grp_fu_1469_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] Weights_address0;
output   Weights_ce0;
input  [31:0] Weights_q0;
output  [13:0] Weights_address1;
output   Weights_ce1;
input  [31:0] Weights_q1;
output  [10:0] OutPadConv5_address0;
output   OutPadConv5_ce0;
input  [31:0] OutPadConv5_q0;
output  [10:0] OutConv5_address0;
output   OutConv5_ce0;
output   OutConv5_we0;
output  [31:0] OutConv5_d0;
output  [31:0] grp_fu_1453_p_din0;
output  [31:0] grp_fu_1453_p_din1;
output  [1:0] grp_fu_1453_p_opcode;
input  [31:0] grp_fu_1453_p_dout0;
output   grp_fu_1453_p_ce;
output  [31:0] grp_fu_1461_p_din0;
output  [31:0] grp_fu_1461_p_din1;
input  [31:0] grp_fu_1461_p_dout0;
output   grp_fu_1461_p_ce;
output  [31:0] grp_fu_1469_p_din0;
output  [31:0] grp_fu_1469_p_din1;
output  [4:0] grp_fu_1469_p_opcode;
input  [0:0] grp_fu_1469_p_dout0;
output   grp_fu_1469_p_ce;

reg ap_idle;
reg Weights_ce0;
reg Weights_ce1;
reg OutPadConv5_ce0;
reg OutConv5_ce0;
reg OutConv5_we0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln143_reg_765;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [7:0] indvar_flatten83_load_reg_755;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
reg   [13:0] indvar_flatten98_load_reg_760;
wire   [0:0] icmp_ln143_fu_241_p2;
wire   [0:0] icmp_ln145_fu_262_p2;
reg   [0:0] icmp_ln145_reg_769;
wire   [0:0] and_ln143_1_fu_286_p2;
reg   [0:0] and_ln143_1_reg_775;
wire   [4:0] select_ln143_1_fu_298_p3;
reg   [4:0] select_ln143_1_reg_780;
reg   [4:0] select_ln143_1_reg_780_pp0_iter1_reg;
wire   [0:0] or_ln145_fu_306_p2;
reg   [0:0] or_ln145_reg_785;
reg   [0:0] or_ln145_reg_785_pp0_iter1_reg;
wire   [2:0] select_ln146_fu_362_p3;
reg   [2:0] select_ln146_reg_791;
wire   [10:0] empty_151_fu_406_p2;
reg   [10:0] empty_151_reg_796;
wire   [10:0] zext_ln148_fu_412_p1;
wire   [0:0] icmp_ln150_1_fu_479_p2;
reg   [0:0] icmp_ln150_1_reg_811;
reg   [0:0] icmp_ln150_1_reg_811_pp0_iter1_reg;
reg   [0:0] icmp_ln150_1_reg_811_pp0_iter2_reg;
reg   [0:0] icmp_ln150_1_reg_811_pp0_iter3_reg;
reg   [0:0] icmp_ln150_1_reg_811_pp0_iter4_reg;
wire   [0:0] icmp_ln148_1_fu_485_p2;
reg   [0:0] icmp_ln148_1_reg_815;
reg   [0:0] icmp_ln148_1_reg_815_pp0_iter1_reg;
reg   [0:0] icmp_ln148_1_reg_815_pp0_iter2_reg;
reg   [0:0] icmp_ln148_1_reg_815_pp0_iter3_reg;
reg   [0:0] icmp_ln148_1_reg_815_pp0_iter4_reg;
reg   [31:0] Weights_load_90_reg_819;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
wire    ap_block_pp0_stage3_11001;
wire   [10:0] add_ln153_fu_551_p2;
reg   [10:0] add_ln153_reg_829;
reg   [10:0] add_ln153_reg_829_pp0_iter1_reg;
reg   [10:0] add_ln153_reg_829_pp0_iter2_reg;
reg   [10:0] add_ln153_reg_829_pp0_iter3_reg;
reg   [31:0] OutPadConv5_load_reg_839;
wire   [31:0] bitcast_ln151_fu_599_p1;
reg   [31:0] mul21_i5_reg_849;
wire   [31:0] select_ln145_1_fu_606_p3;
reg   [31:0] Weights_load_reg_864;
reg   [31:0] s_reg_869;
wire   [31:0] empty_152_fu_633_p1;
reg   [31:0] add28_i5_reg_879;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln151_2_fu_468_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln151_4_fu_561_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] arrayidx37_sum_cast_fu_623_p1;
wire   [63:0] zext_ln153_fu_678_p1;
wire    ap_block_pp0_stage3;
reg   [31:0] s_126_fu_96;
wire    ap_loop_init;
reg   [2:0] j_fu_100;
wire   [2:0] add_ln150_fu_473_p2;
reg   [4:0] k_fu_104;
wire   [4:0] select_ln148_fu_370_p3;
reg   [7:0] indvar_flatten83_fu_108;
wire   [7:0] select_ln148_1_fu_570_p3;
reg   [6:0] y_fu_112;
wire   [6:0] select_ln145_2_fu_527_p3;
reg   [13:0] indvar_flatten98_fu_116;
wire   [13:0] select_ln145_3_fu_582_p3;
reg   [4:0] n_fu_120;
reg   [16:0] indvar_flatten122_fu_124;
wire   [16:0] add_ln143_fu_247_p2;
reg   [31:0] grp_fu_179_p0;
reg   [31:0] grp_fu_179_p1;
wire    ap_block_pp0_stage2;
wire   [0:0] icmp_ln148_fu_280_p2;
wire   [0:0] xor_ln143_fu_268_p2;
wire   [4:0] add_ln143_1_fu_292_p2;
wire   [0:0] xor_ln145_fu_320_p2;
wire   [0:0] icmp_ln150_fu_274_p2;
wire   [0:0] and_ln143_fu_332_p2;
wire   [0:0] or_ln145_1_fu_326_p2;
wire   [4:0] select_ln145_fu_312_p3;
wire   [0:0] and_ln145_fu_338_p2;
wire   [0:0] or_ln146_fu_350_p2;
wire   [0:0] or_ln146_1_fu_356_p2;
wire   [4:0] add_ln148_fu_344_p2;
wire   [3:0] empty_fu_378_p1;
wire   [9:0] p_shl_fu_382_p3;
wire   [7:0] p_shl22_fu_394_p3;
wire   [10:0] p_shl37_cast_fu_390_p1;
wire   [10:0] p_shl38_cast_fu_402_p1;
wire   [3:0] empty_153_fu_416_p1;
wire   [5:0] p_shl23_fu_420_p3;
wire   [10:0] add_ln151_fu_436_p2;
wire   [10:0] zext_ln150_1_fu_432_p1;
wire   [10:0] add_ln151_2_fu_446_p2;
wire   [10:0] p_shl39_cast_fu_428_p1;
wire   [10:0] add_ln151_4_fu_452_p2;
wire   [11:0] zext_ln151_1_fu_458_p1;
wire   [11:0] zext_ln151_fu_442_p1;
wire   [11:0] add_ln151_1_fu_462_p2;
wire   [6:0] select_ln143_fu_514_p3;
wire   [6:0] add_ln145_fu_521_p2;
wire   [6:0] zext_ln150_fu_538_p1;
wire   [6:0] add_ln151_5_fu_541_p2;
wire   [10:0] zext_ln145_fu_534_p1;
wire   [10:0] grp_fu_690_p3;
wire   [7:0] add_ln148_1_fu_565_p2;
wire   [13:0] add_ln145_1_fu_577_p2;
wire   [11:0] zext_ln143_fu_614_p1;
wire   [11:0] arrayidx37_sum_fu_617_p2;
wire   [31:0] bitcast_ln153_fu_637_p1;
wire   [7:0] tmp_s_fu_640_p4;
wire   [22:0] trunc_ln153_fu_650_p1;
wire   [0:0] icmp_ln153_1_fu_660_p2;
wire   [0:0] icmp_ln153_fu_654_p2;
wire   [0:0] or_ln153_fu_666_p2;
wire   [0:0] and_ln153_fu_672_p2;
wire   [4:0] grp_fu_690_p0;
wire   [6:0] grp_fu_690_p1;
wire   [6:0] grp_fu_690_p2;
wire    ap_block_pp0_stage2_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to4;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage1_00001;
wire   [10:0] grp_fu_690_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 s_126_fu_96 = 32'd0;
#0 j_fu_100 = 3'd0;
#0 k_fu_104 = 5'd0;
#0 indvar_flatten83_fu_108 = 8'd0;
#0 y_fu_112 = 7'd0;
#0 indvar_flatten98_fu_116 = 14'd0;
#0 n_fu_120 = 5'd0;
#0 indvar_flatten122_fu_124 = 17'd0;
#0 ap_done_reg = 1'b0;
end

CNN_mac_muladd_5ns_7ns_7ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 7 ),
    .dout_WIDTH( 11 ))
mac_muladd_5ns_7ns_7ns_11_4_1_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_690_p0),
    .din1(grp_fu_690_p1),
    .din2(grp_fu_690_p2),
    .ce(1'b1),
    .dout(grp_fu_690_p3)
);

CNN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten122_fu_124 <= 17'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln143_fu_241_p2 == 1'd0))) begin
        indvar_flatten122_fu_124 <= add_ln143_fu_247_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten83_fu_108 <= 8'd0;
        end else if (((icmp_ln143_reg_765 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten83_fu_108 <= select_ln148_1_fu_570_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten98_fu_116 <= 14'd0;
        end else if (((icmp_ln143_reg_765 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten98_fu_116 <= select_ln145_3_fu_582_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_100 <= 3'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln143_fu_241_p2 == 1'd0))) begin
        j_fu_100 <= add_ln150_fu_473_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_fu_104 <= 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln143_fu_241_p2 == 1'd0))) begin
        k_fu_104 <= select_ln148_fu_370_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        n_fu_120 <= 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln143_fu_241_p2 == 1'd0))) begin
        n_fu_120 <= select_ln143_1_fu_298_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            s_126_fu_96 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            s_126_fu_96 <= grp_fu_1453_p_dout0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        y_fu_112 <= 7'd0;
    end else if (((icmp_ln143_reg_765 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        y_fu_112 <= select_ln145_2_fu_527_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        OutPadConv5_load_reg_839 <= OutPadConv5_q0;
        and_ln143_1_reg_775 <= and_ln143_1_fu_286_p2;
        empty_151_reg_796[10 : 4] <= empty_151_fu_406_p2[10 : 4];
        icmp_ln143_reg_765 <= icmp_ln143_fu_241_p2;
        icmp_ln145_reg_769 <= icmp_ln145_fu_262_p2;
        icmp_ln148_1_reg_815 <= icmp_ln148_1_fu_485_p2;
        icmp_ln148_1_reg_815_pp0_iter1_reg <= icmp_ln148_1_reg_815;
        icmp_ln148_1_reg_815_pp0_iter2_reg <= icmp_ln148_1_reg_815_pp0_iter1_reg;
        icmp_ln148_1_reg_815_pp0_iter3_reg <= icmp_ln148_1_reg_815_pp0_iter2_reg;
        icmp_ln148_1_reg_815_pp0_iter4_reg <= icmp_ln148_1_reg_815_pp0_iter3_reg;
        icmp_ln150_1_reg_811 <= icmp_ln150_1_fu_479_p2;
        icmp_ln150_1_reg_811_pp0_iter1_reg <= icmp_ln150_1_reg_811;
        icmp_ln150_1_reg_811_pp0_iter2_reg <= icmp_ln150_1_reg_811_pp0_iter1_reg;
        icmp_ln150_1_reg_811_pp0_iter3_reg <= icmp_ln150_1_reg_811_pp0_iter2_reg;
        icmp_ln150_1_reg_811_pp0_iter4_reg <= icmp_ln150_1_reg_811_pp0_iter3_reg;
        indvar_flatten83_load_reg_755 <= indvar_flatten83_fu_108;
        indvar_flatten98_load_reg_760 <= indvar_flatten98_fu_116;
        or_ln145_reg_785 <= or_ln145_fu_306_p2;
        or_ln145_reg_785_pp0_iter1_reg <= or_ln145_reg_785;
        select_ln143_1_reg_780 <= select_ln143_1_fu_298_p3;
        select_ln143_1_reg_780_pp0_iter1_reg <= select_ln143_1_reg_780;
        select_ln146_reg_791 <= select_ln146_fu_362_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        Weights_load_90_reg_819 <= Weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        Weights_load_reg_864 <= Weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add28_i5_reg_879 <= grp_fu_1453_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln153_reg_829 <= add_ln153_fu_551_p2;
        add_ln153_reg_829_pp0_iter1_reg <= add_ln153_reg_829;
        add_ln153_reg_829_pp0_iter2_reg <= add_ln153_reg_829_pp0_iter1_reg;
        add_ln153_reg_829_pp0_iter3_reg <= add_ln153_reg_829_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul21_i5_reg_849 <= grp_fu_1461_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        s_reg_869 <= grp_fu_1453_p_dout0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        OutConv5_ce0 = 1'b1;
    end else begin
        OutConv5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln148_1_reg_815_pp0_iter4_reg == 1'd1) & (icmp_ln150_1_reg_811_pp0_iter4_reg == 1'd1))) begin
        OutConv5_we0 = 1'b1;
    end else begin
        OutConv5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPadConv5_ce0 = 1'b1;
    end else begin
        OutPadConv5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Weights_ce0 = 1'b1;
    end else begin
        Weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Weights_ce1 = 1'b1;
    end else begin
        Weights_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln143_reg_765 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to4 = 1'b1;
    end else begin
        ap_idle_pp0_1to4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_179_p0 = s_reg_869;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_179_p0 = select_ln145_1_fu_606_p3;
    end else begin
        grp_fu_179_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_179_p1 = empty_152_fu_633_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_179_p1 = mul21_i5_reg_849;
    end else begin
        grp_fu_179_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to4 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OutConv5_address0 = zext_ln153_fu_678_p1;

assign OutConv5_d0 = ((and_ln153_fu_672_p2[0:0] == 1'b1) ? 32'd0 : add28_i5_reg_879);

assign OutPadConv5_address0 = zext_ln151_4_fu_561_p1;

assign Weights_address0 = arrayidx37_sum_cast_fu_623_p1;

assign Weights_address1 = zext_ln151_2_fu_468_p1;

assign add_ln143_1_fu_292_p2 = (n_fu_120 + 5'd1);

assign add_ln143_fu_247_p2 = (indvar_flatten122_fu_124 + 17'd1);

assign add_ln145_1_fu_577_p2 = (indvar_flatten98_load_reg_760 + 14'd1);

assign add_ln145_fu_521_p2 = (select_ln143_fu_514_p3 + 7'd1);

assign add_ln148_1_fu_565_p2 = (indvar_flatten83_load_reg_755 + 8'd1);

assign add_ln148_fu_344_p2 = (select_ln145_fu_312_p3 + 5'd1);

assign add_ln150_fu_473_p2 = (select_ln146_fu_362_p3 + 3'd1);

assign add_ln151_1_fu_462_p2 = (zext_ln151_1_fu_458_p1 + zext_ln151_fu_442_p1);

assign add_ln151_2_fu_446_p2 = ($signed(zext_ln150_1_fu_432_p1) + $signed(11'd1260));

assign add_ln151_4_fu_452_p2 = (add_ln151_2_fu_446_p2 + p_shl39_cast_fu_428_p1);

assign add_ln151_5_fu_541_p2 = (select_ln145_2_fu_527_p3 + zext_ln150_fu_538_p1);

assign add_ln151_fu_436_p2 = (empty_151_fu_406_p2 + zext_ln148_fu_412_p1);

assign add_ln153_fu_551_p2 = (zext_ln145_fu_534_p1 + empty_151_reg_796);

assign and_ln143_1_fu_286_p2 = (xor_ln143_fu_268_p2 & icmp_ln148_fu_280_p2);

assign and_ln143_fu_332_p2 = (xor_ln143_fu_268_p2 & icmp_ln150_fu_274_p2);

assign and_ln145_fu_338_p2 = (or_ln145_1_fu_326_p2 & and_ln143_fu_332_p2);

assign and_ln153_fu_672_p2 = (or_ln153_fu_666_p2 & grp_fu_1469_p_dout0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign arrayidx37_sum_cast_fu_623_p1 = arrayidx37_sum_fu_617_p2;

assign arrayidx37_sum_fu_617_p2 = ($signed(zext_ln143_fu_614_p1) + $signed(12'd2540));

assign bitcast_ln151_fu_599_p1 = Weights_load_90_reg_819;

assign bitcast_ln153_fu_637_p1 = add28_i5_reg_879;

assign empty_151_fu_406_p2 = (p_shl37_cast_fu_390_p1 + p_shl38_cast_fu_402_p1);

assign empty_152_fu_633_p1 = Weights_load_reg_864;

assign empty_153_fu_416_p1 = select_ln148_fu_370_p3[3:0];

assign empty_fu_378_p1 = select_ln143_1_fu_298_p3[3:0];

assign grp_fu_1453_p_ce = 1'b1;

assign grp_fu_1453_p_din0 = grp_fu_179_p0;

assign grp_fu_1453_p_din1 = grp_fu_179_p1;

assign grp_fu_1453_p_opcode = 2'd0;

assign grp_fu_1461_p_ce = 1'b1;

assign grp_fu_1461_p_din0 = bitcast_ln151_fu_599_p1;

assign grp_fu_1461_p_din1 = OutPadConv5_load_reg_839;

assign grp_fu_1469_p_ce = 1'b1;

assign grp_fu_1469_p_din0 = add28_i5_reg_879;

assign grp_fu_1469_p_din1 = 32'd0;

assign grp_fu_1469_p_opcode = 5'd4;

assign grp_fu_690_p0 = zext_ln148_fu_412_p1;

assign grp_fu_690_p1 = 11'd84;

assign grp_fu_690_p2 = grp_fu_690_p20;

assign grp_fu_690_p20 = add_ln151_5_fu_541_p2;

assign icmp_ln143_fu_241_p2 = ((indvar_flatten122_fu_124 == 17'd102400) ? 1'b1 : 1'b0);

assign icmp_ln145_fu_262_p2 = ((indvar_flatten98_fu_116 == 14'd6400) ? 1'b1 : 1'b0);

assign icmp_ln148_1_fu_485_p2 = ((select_ln148_fu_370_p3 == 5'd15) ? 1'b1 : 1'b0);

assign icmp_ln148_fu_280_p2 = ((indvar_flatten83_fu_108 == 8'd80) ? 1'b1 : 1'b0);

assign icmp_ln150_1_fu_479_p2 = ((add_ln150_fu_473_p2 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln150_fu_274_p2 = ((j_fu_100 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln153_1_fu_660_p2 = ((trunc_ln153_fu_650_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln153_fu_654_p2 = ((tmp_s_fu_640_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln145_1_fu_326_p2 = (xor_ln145_fu_320_p2 | icmp_ln145_fu_262_p2);

assign or_ln145_fu_306_p2 = (icmp_ln145_fu_262_p2 | and_ln143_1_fu_286_p2);

assign or_ln146_1_fu_356_p2 = (or_ln146_fu_350_p2 | icmp_ln145_fu_262_p2);

assign or_ln146_fu_350_p2 = (and_ln145_fu_338_p2 | and_ln143_1_fu_286_p2);

assign or_ln153_fu_666_p2 = (icmp_ln153_fu_654_p2 | icmp_ln153_1_fu_660_p2);

assign p_shl22_fu_394_p3 = {{empty_fu_378_p1}, {4'd0}};

assign p_shl23_fu_420_p3 = {{empty_153_fu_416_p1}, {2'd0}};

assign p_shl37_cast_fu_390_p1 = p_shl_fu_382_p3;

assign p_shl38_cast_fu_402_p1 = p_shl22_fu_394_p3;

assign p_shl39_cast_fu_428_p1 = p_shl23_fu_420_p3;

assign p_shl_fu_382_p3 = {{empty_fu_378_p1}, {6'd0}};

assign select_ln143_1_fu_298_p3 = ((icmp_ln145_fu_262_p2[0:0] == 1'b1) ? add_ln143_1_fu_292_p2 : n_fu_120);

assign select_ln143_fu_514_p3 = ((icmp_ln145_reg_769[0:0] == 1'b1) ? 7'd0 : y_fu_112);

assign select_ln145_1_fu_606_p3 = ((or_ln145_reg_785_pp0_iter1_reg[0:0] == 1'b1) ? 32'd0 : s_126_fu_96);

assign select_ln145_2_fu_527_p3 = ((and_ln143_1_reg_775[0:0] == 1'b1) ? add_ln145_fu_521_p2 : select_ln143_fu_514_p3);

assign select_ln145_3_fu_582_p3 = ((icmp_ln145_reg_769[0:0] == 1'b1) ? 14'd1 : add_ln145_1_fu_577_p2);

assign select_ln145_fu_312_p3 = ((or_ln145_fu_306_p2[0:0] == 1'b1) ? 5'd0 : k_fu_104);

assign select_ln146_fu_362_p3 = ((or_ln146_1_fu_356_p2[0:0] == 1'b1) ? 3'd0 : j_fu_100);

assign select_ln148_1_fu_570_p3 = ((or_ln145_reg_785[0:0] == 1'b1) ? 8'd1 : add_ln148_1_fu_565_p2);

assign select_ln148_fu_370_p3 = ((and_ln145_fu_338_p2[0:0] == 1'b1) ? add_ln148_fu_344_p2 : select_ln145_fu_312_p3);

assign tmp_s_fu_640_p4 = {{bitcast_ln153_fu_637_p1[30:23]}};

assign trunc_ln153_fu_650_p1 = bitcast_ln153_fu_637_p1[22:0];

assign xor_ln143_fu_268_p2 = (icmp_ln145_fu_262_p2 ^ 1'd1);

assign xor_ln145_fu_320_p2 = (icmp_ln148_fu_280_p2 ^ 1'd1);

assign zext_ln143_fu_614_p1 = select_ln143_1_reg_780_pp0_iter1_reg;

assign zext_ln145_fu_534_p1 = select_ln145_2_fu_527_p3;

assign zext_ln148_fu_412_p1 = select_ln148_fu_370_p3;

assign zext_ln150_1_fu_432_p1 = select_ln146_fu_362_p3;

assign zext_ln150_fu_538_p1 = select_ln146_reg_791;

assign zext_ln151_1_fu_458_p1 = add_ln151_4_fu_452_p2;

assign zext_ln151_2_fu_468_p1 = add_ln151_1_fu_462_p2;

assign zext_ln151_4_fu_561_p1 = grp_fu_690_p3;

assign zext_ln151_fu_442_p1 = add_ln151_fu_436_p2;

assign zext_ln153_fu_678_p1 = add_ln153_reg_829_pp0_iter3_reg;

always @ (posedge ap_clk) begin
    empty_151_reg_796[3:0] <= 4'b0000;
end

endmodule //CNN_CNN_Pipeline_VITIS_LOOP_143_1_loop_for_ap_5_loop_for_fc_5_loop_for_fa_5
