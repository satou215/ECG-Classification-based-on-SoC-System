// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module CNN_CNN_Pipeline_loop_for_a_Dense_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Weights_address0,
        Weights_ce0,
        Weights_q0,
        Weights_address1,
        Weights_ce1,
        Weights_q1,
        OutDense0_load,
        OutDense0_load_1,
        OutDense0_load_2,
        OutDense0_load_3,
        OutDense0_load_4,
        OutDense0_load_5,
        OutDense0_load_6,
        OutDense0_load_7,
        OutDense0_load_8,
        OutDense0_load_9,
        OutDense0_load_10,
        OutDense0_load_11,
        OutDense0_load_12,
        OutDense0_load_13,
        OutDense0_load_14,
        OutDense0_load_15,
        OutDense0_load_16,
        OutDense0_load_17,
        OutDense0_load_18,
        OutDense0_load_19,
        out_Dense_address0,
        out_Dense_ce0,
        out_Dense_we0,
        out_Dense_d0,
        grp_fu_1453_p_din0,
        grp_fu_1453_p_din1,
        grp_fu_1453_p_opcode,
        grp_fu_1453_p_dout0,
        grp_fu_1453_p_ce,
        grp_fu_1457_p_din0,
        grp_fu_1457_p_din1,
        grp_fu_1457_p_opcode,
        grp_fu_1457_p_dout0,
        grp_fu_1457_p_ce,
        grp_fu_1461_p_din0,
        grp_fu_1461_p_din1,
        grp_fu_1461_p_dout0,
        grp_fu_1461_p_ce,
        grp_fu_1465_p_din0,
        grp_fu_1465_p_din1,
        grp_fu_1465_p_dout0,
        grp_fu_1465_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 11'd1;
parameter    ap_ST_fsm_pp0_stage1 = 11'd2;
parameter    ap_ST_fsm_pp0_stage2 = 11'd4;
parameter    ap_ST_fsm_pp0_stage3 = 11'd8;
parameter    ap_ST_fsm_pp0_stage4 = 11'd16;
parameter    ap_ST_fsm_pp0_stage5 = 11'd32;
parameter    ap_ST_fsm_pp0_stage6 = 11'd64;
parameter    ap_ST_fsm_pp0_stage7 = 11'd128;
parameter    ap_ST_fsm_pp0_stage8 = 11'd256;
parameter    ap_ST_fsm_pp0_stage9 = 11'd512;
parameter    ap_ST_fsm_pp0_stage10 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] Weights_address0;
output   Weights_ce0;
input  [31:0] Weights_q0;
output  [13:0] Weights_address1;
output   Weights_ce1;
input  [31:0] Weights_q1;
input  [31:0] OutDense0_load;
input  [31:0] OutDense0_load_1;
input  [31:0] OutDense0_load_2;
input  [31:0] OutDense0_load_3;
input  [31:0] OutDense0_load_4;
input  [31:0] OutDense0_load_5;
input  [31:0] OutDense0_load_6;
input  [31:0] OutDense0_load_7;
input  [31:0] OutDense0_load_8;
input  [31:0] OutDense0_load_9;
input  [31:0] OutDense0_load_10;
input  [31:0] OutDense0_load_11;
input  [31:0] OutDense0_load_12;
input  [31:0] OutDense0_load_13;
input  [31:0] OutDense0_load_14;
input  [31:0] OutDense0_load_15;
input  [31:0] OutDense0_load_16;
input  [31:0] OutDense0_load_17;
input  [31:0] OutDense0_load_18;
input  [31:0] OutDense0_load_19;
output  [2:0] out_Dense_address0;
output   out_Dense_ce0;
output   out_Dense_we0;
output  [31:0] out_Dense_d0;
output  [31:0] grp_fu_1453_p_din0;
output  [31:0] grp_fu_1453_p_din1;
output  [1:0] grp_fu_1453_p_opcode;
input  [31:0] grp_fu_1453_p_dout0;
output   grp_fu_1453_p_ce;
output  [31:0] grp_fu_1457_p_din0;
output  [31:0] grp_fu_1457_p_din1;
output  [1:0] grp_fu_1457_p_opcode;
input  [31:0] grp_fu_1457_p_dout0;
output   grp_fu_1457_p_ce;
output  [31:0] grp_fu_1461_p_din0;
output  [31:0] grp_fu_1461_p_din1;
input  [31:0] grp_fu_1461_p_dout0;
output   grp_fu_1461_p_ce;
output  [31:0] grp_fu_1465_p_din0;
output  [31:0] grp_fu_1465_p_din1;
input  [31:0] grp_fu_1465_p_dout0;
output   grp_fu_1465_p_ce;

reg ap_idle;
reg[13:0] Weights_address0;
reg Weights_ce0;
reg[13:0] Weights_address1;
reg Weights_ce1;
reg out_Dense_ce0;
reg out_Dense_we0;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10_subdone;
reg   [0:0] icmp_ln15_1_reg_976;
reg    ap_condition_exit_pp0_iter0_stage10;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_454;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9_11001;
wire    ap_block_pp0_stage10_11001;
reg   [31:0] reg_458;
reg   [31:0] reg_462;
reg   [31:0] reg_467;
reg   [31:0] reg_472;
reg   [31:0] reg_477;
reg   [31:0] reg_482;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] reg_487;
reg   [31:0] reg_492;
reg   [31:0] reg_497;
reg   [31:0] reg_502;
reg   [2:0] i_1_reg_969;
reg   [2:0] i_1_reg_969_pp0_iter1_reg;
reg   [2:0] i_1_reg_969_pp0_iter2_reg;
reg   [2:0] i_1_reg_969_pp0_iter3_reg;
reg   [2:0] i_1_reg_969_pp0_iter4_reg;
reg   [2:0] i_1_reg_969_pp0_iter5_reg;
reg   [2:0] i_1_reg_969_pp0_iter6_reg;
reg   [2:0] i_1_reg_969_pp0_iter7_reg;
wire   [0:0] icmp_ln15_1_fu_515_p2;
reg   [0:0] icmp_ln15_1_reg_976_pp0_iter1_reg;
reg   [0:0] icmp_ln15_1_reg_976_pp0_iter2_reg;
reg   [0:0] icmp_ln15_1_reg_976_pp0_iter3_reg;
reg   [0:0] icmp_ln15_1_reg_976_pp0_iter4_reg;
reg   [0:0] icmp_ln15_1_reg_976_pp0_iter5_reg;
reg   [0:0] icmp_ln15_1_reg_976_pp0_iter6_reg;
wire   [13:0] zext_ln15_1_fu_527_p1;
reg   [13:0] zext_ln15_1_reg_980;
reg   [13:0] zext_ln15_1_reg_980_pp0_iter1_reg;
reg   [13:0] zext_ln15_1_reg_980_pp0_iter2_reg;
reg   [13:0] zext_ln15_1_reg_980_pp0_iter3_reg;
reg   [13:0] zext_ln15_1_reg_980_pp0_iter4_reg;
reg   [13:0] zext_ln15_1_reg_980_pp0_iter5_reg;
reg   [13:0] zext_ln15_1_reg_980_pp0_iter6_reg;
wire   [31:0] bitcast_ln19_fu_580_p1;
wire   [31:0] bitcast_ln19_1_fu_585_p1;
wire   [31:0] bitcast_ln19_2_fu_610_p1;
wire   [31:0] bitcast_ln19_3_fu_615_p1;
reg   [31:0] mul7_i1_reg_1061;
reg   [31:0] mul7_i398_1_reg_1066;
wire   [31:0] bitcast_ln19_4_fu_640_p1;
wire   [31:0] bitcast_ln19_5_fu_645_p1;
reg   [31:0] mul7_i398_2_reg_1091;
reg   [31:0] mul7_i398_3_reg_1096;
reg   [31:0] mul7_i398_3_reg_1096_pp0_iter1_reg;
wire   [31:0] bitcast_ln19_6_fu_672_p1;
wire   [31:0] bitcast_ln19_7_fu_677_p1;
reg   [31:0] mul7_i398_4_reg_1121;
reg   [31:0] mul7_i398_4_reg_1121_pp0_iter1_reg;
reg   [31:0] mul7_i398_5_reg_1126;
reg   [31:0] mul7_i398_5_reg_1126_pp0_iter1_reg;
wire   [31:0] bitcast_ln19_8_fu_702_p1;
wire   [31:0] bitcast_ln19_9_fu_707_p1;
reg   [31:0] mul7_i398_6_reg_1151;
reg   [31:0] mul7_i398_6_reg_1151_pp0_iter1_reg;
reg   [31:0] mul7_i398_7_reg_1156;
reg   [31:0] mul7_i398_7_reg_1156_pp0_iter1_reg;
reg   [31:0] mul7_i398_7_reg_1156_pp0_iter2_reg;
wire   [31:0] bitcast_ln19_10_fu_732_p1;
wire   [31:0] bitcast_ln19_11_fu_737_p1;
reg   [31:0] mul7_i398_8_reg_1181;
reg   [31:0] mul7_i398_8_reg_1181_pp0_iter1_reg;
reg   [31:0] mul7_i398_8_reg_1181_pp0_iter2_reg;
reg   [31:0] mul7_i398_9_reg_1186;
reg   [31:0] mul7_i398_9_reg_1186_pp0_iter1_reg;
reg   [31:0] mul7_i398_9_reg_1186_pp0_iter2_reg;
wire   [31:0] bitcast_ln19_12_fu_762_p1;
wire   [31:0] bitcast_ln19_13_fu_767_p1;
reg   [31:0] mul7_i398_s_reg_1211;
reg   [31:0] mul7_i398_s_reg_1211_pp0_iter1_reg;
reg   [31:0] mul7_i398_s_reg_1211_pp0_iter2_reg;
reg   [31:0] mul7_i398_s_reg_1211_pp0_iter3_reg;
reg   [31:0] mul7_i398_10_reg_1216;
reg   [31:0] mul7_i398_10_reg_1216_pp0_iter1_reg;
reg   [31:0] mul7_i398_10_reg_1216_pp0_iter2_reg;
reg   [31:0] mul7_i398_10_reg_1216_pp0_iter3_reg;
wire   [31:0] bitcast_ln19_14_fu_794_p1;
wire   [31:0] bitcast_ln19_15_fu_799_p1;
reg   [31:0] mul7_i398_11_reg_1241;
reg   [31:0] mul7_i398_11_reg_1241_pp0_iter1_reg;
reg   [31:0] mul7_i398_11_reg_1241_pp0_iter2_reg;
reg   [31:0] mul7_i398_11_reg_1241_pp0_iter3_reg;
reg   [31:0] mul7_i398_12_reg_1246;
reg   [31:0] mul7_i398_12_reg_1246_pp0_iter1_reg;
reg   [31:0] mul7_i398_12_reg_1246_pp0_iter2_reg;
reg   [31:0] mul7_i398_12_reg_1246_pp0_iter3_reg;
reg   [31:0] mul7_i398_12_reg_1246_pp0_iter4_reg;
wire   [31:0] bitcast_ln19_16_fu_824_p1;
wire   [31:0] bitcast_ln19_17_fu_829_p1;
reg   [31:0] mul7_i398_13_reg_1261;
reg   [31:0] mul7_i398_13_reg_1261_pp0_iter2_reg;
reg   [31:0] mul7_i398_13_reg_1261_pp0_iter3_reg;
reg   [31:0] mul7_i398_13_reg_1261_pp0_iter4_reg;
reg   [31:0] mul7_i398_13_reg_1261_pp0_iter5_reg;
reg   [31:0] mul7_i398_14_reg_1266;
reg   [31:0] mul7_i398_14_reg_1266_pp0_iter2_reg;
reg   [31:0] mul7_i398_14_reg_1266_pp0_iter3_reg;
reg   [31:0] mul7_i398_14_reg_1266_pp0_iter4_reg;
reg   [31:0] mul7_i398_14_reg_1266_pp0_iter5_reg;
wire   [31:0] bitcast_ln19_18_fu_834_p1;
wire   [31:0] bitcast_ln19_19_fu_839_p1;
reg   [31:0] mul7_i398_15_reg_1281;
reg   [31:0] mul7_i398_15_reg_1281_pp0_iter2_reg;
reg   [31:0] mul7_i398_15_reg_1281_pp0_iter3_reg;
reg   [31:0] mul7_i398_15_reg_1281_pp0_iter4_reg;
reg   [31:0] mul7_i398_15_reg_1281_pp0_iter5_reg;
reg   [31:0] mul7_i398_15_reg_1281_pp0_iter6_reg;
reg   [31:0] mul7_i398_16_reg_1286;
reg   [31:0] mul7_i398_16_reg_1286_pp0_iter2_reg;
reg   [31:0] mul7_i398_16_reg_1286_pp0_iter3_reg;
reg   [31:0] mul7_i398_16_reg_1286_pp0_iter4_reg;
reg   [31:0] mul7_i398_16_reg_1286_pp0_iter5_reg;
reg   [31:0] mul7_i398_16_reg_1286_pp0_iter6_reg;
reg   [31:0] mul7_i398_17_reg_1291;
reg   [31:0] mul7_i398_17_reg_1291_pp0_iter2_reg;
reg   [31:0] mul7_i398_17_reg_1291_pp0_iter3_reg;
reg   [31:0] mul7_i398_17_reg_1291_pp0_iter4_reg;
reg   [31:0] mul7_i398_17_reg_1291_pp0_iter5_reg;
reg   [31:0] mul7_i398_17_reg_1291_pp0_iter6_reg;
reg   [31:0] mul7_i398_18_reg_1296;
reg   [31:0] mul7_i398_18_reg_1296_pp0_iter2_reg;
reg   [31:0] mul7_i398_18_reg_1296_pp0_iter3_reg;
reg   [31:0] mul7_i398_18_reg_1296_pp0_iter4_reg;
reg   [31:0] mul7_i398_18_reg_1296_pp0_iter5_reg;
reg   [31:0] mul7_i398_18_reg_1296_pp0_iter6_reg;
reg   [31:0] mul7_i398_18_reg_1296_pp0_iter7_reg;
reg   [31:0] s_10_reg_1301;
reg   [31:0] Weights_load_20_reg_1311;
reg   [31:0] s_19_reg_1316;
wire   [31:0] bitcast_ln21_fu_854_p1;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln19_fu_539_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln19_1_fu_550_p1;
wire   [63:0] zext_ln19_2_fu_565_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln19_3_fu_575_p1;
wire   [63:0] zext_ln19_4_fu_595_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln19_5_fu_605_p1;
wire   [63:0] zext_ln19_6_fu_625_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln19_7_fu_635_p1;
wire   [63:0] zext_ln19_8_fu_657_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln19_9_fu_667_p1;
wire   [63:0] zext_ln19_10_fu_687_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln19_11_fu_697_p1;
wire   [63:0] zext_ln19_12_fu_717_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln19_13_fu_727_p1;
wire   [63:0] zext_ln19_14_fu_747_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln19_15_fu_757_p1;
wire   [63:0] zext_ln19_16_fu_779_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln19_17_fu_789_p1;
wire   [63:0] zext_ln19_18_fu_809_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln19_19_fu_819_p1;
wire   [63:0] zext_ln21_fu_849_p1;
wire    ap_block_pp0_stage10;
wire   [63:0] zext_ln15_fu_858_p1;
reg   [2:0] i_fu_122;
wire   [2:0] add_ln15_fu_521_p2;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_i_1;
reg   [31:0] grp_fu_436_p0;
reg   [31:0] grp_fu_436_p1;
reg   [31:0] grp_fu_441_p0;
reg   [31:0] grp_fu_441_p1;
reg   [31:0] grp_fu_446_p0;
reg   [31:0] grp_fu_446_p1;
reg   [31:0] grp_fu_450_p0;
reg   [31:0] grp_fu_450_p1;
wire   [13:0] zext_ln19_cast_fu_531_p3;
wire   [13:0] add_ln19_fu_544_p2;
wire   [13:0] add_ln19_1_fu_560_p2;
wire   [13:0] add_ln19_2_fu_570_p2;
wire   [13:0] add_ln19_3_fu_590_p2;
wire   [13:0] add_ln19_4_fu_600_p2;
wire   [13:0] add_ln19_5_fu_620_p2;
wire   [13:0] add_ln19_6_fu_630_p2;
wire   [13:0] zext_ln19_8_cast_fu_650_p3;
wire   [13:0] add_ln19_7_fu_662_p2;
wire   [13:0] add_ln19_8_fu_682_p2;
wire   [13:0] add_ln19_9_fu_692_p2;
wire   [13:0] add_ln19_10_fu_712_p2;
wire   [13:0] add_ln19_11_fu_722_p2;
wire   [13:0] add_ln19_12_fu_742_p2;
wire   [13:0] add_ln19_13_fu_752_p2;
wire   [13:0] zext_ln19_16_cast_fu_772_p3;
wire   [13:0] add_ln19_14_fu_784_p2;
wire   [13:0] add_ln19_15_fu_804_p2;
wire   [13:0] add_ln19_16_fu_814_p2;
wire   [13:0] add_ln21_fu_844_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter7_stage0;
reg    ap_idle_pp0_0to6;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [10:0] ap_NS_fsm;
reg    ap_idle_pp0_1to8;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage5_00001;
wire    ap_block_pp0_stage9_00001;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage10_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage7_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage8_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 i_fu_122 = 3'd0;
#0 ap_done_reg = 1'b0;
end

CNN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage10),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage10)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage0))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage0))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln15_1_fu_515_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_122 <= add_ln15_fu_521_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_122 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weights_load_20_reg_1311 <= Weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_reg_969 <= ap_sig_allocacmp_i_1;
        i_1_reg_969_pp0_iter1_reg <= i_1_reg_969;
        i_1_reg_969_pp0_iter2_reg <= i_1_reg_969_pp0_iter1_reg;
        i_1_reg_969_pp0_iter3_reg <= i_1_reg_969_pp0_iter2_reg;
        i_1_reg_969_pp0_iter4_reg <= i_1_reg_969_pp0_iter3_reg;
        i_1_reg_969_pp0_iter5_reg <= i_1_reg_969_pp0_iter4_reg;
        i_1_reg_969_pp0_iter6_reg <= i_1_reg_969_pp0_iter5_reg;
        i_1_reg_969_pp0_iter7_reg <= i_1_reg_969_pp0_iter6_reg;
        icmp_ln15_1_reg_976 <= icmp_ln15_1_fu_515_p2;
        icmp_ln15_1_reg_976_pp0_iter1_reg <= icmp_ln15_1_reg_976;
        icmp_ln15_1_reg_976_pp0_iter2_reg <= icmp_ln15_1_reg_976_pp0_iter1_reg;
        icmp_ln15_1_reg_976_pp0_iter3_reg <= icmp_ln15_1_reg_976_pp0_iter2_reg;
        icmp_ln15_1_reg_976_pp0_iter4_reg <= icmp_ln15_1_reg_976_pp0_iter3_reg;
        icmp_ln15_1_reg_976_pp0_iter5_reg <= icmp_ln15_1_reg_976_pp0_iter4_reg;
        icmp_ln15_1_reg_976_pp0_iter6_reg <= icmp_ln15_1_reg_976_pp0_iter5_reg;
        mul7_i398_13_reg_1261_pp0_iter2_reg <= mul7_i398_13_reg_1261;
        mul7_i398_13_reg_1261_pp0_iter3_reg <= mul7_i398_13_reg_1261_pp0_iter2_reg;
        mul7_i398_13_reg_1261_pp0_iter4_reg <= mul7_i398_13_reg_1261_pp0_iter3_reg;
        mul7_i398_13_reg_1261_pp0_iter5_reg <= mul7_i398_13_reg_1261_pp0_iter4_reg;
        mul7_i398_14_reg_1266_pp0_iter2_reg <= mul7_i398_14_reg_1266;
        mul7_i398_14_reg_1266_pp0_iter3_reg <= mul7_i398_14_reg_1266_pp0_iter2_reg;
        mul7_i398_14_reg_1266_pp0_iter4_reg <= mul7_i398_14_reg_1266_pp0_iter3_reg;
        mul7_i398_14_reg_1266_pp0_iter5_reg <= mul7_i398_14_reg_1266_pp0_iter4_reg;
        zext_ln15_1_reg_980[2 : 0] <= zext_ln15_1_fu_527_p1[2 : 0];
        zext_ln15_1_reg_980_pp0_iter1_reg[2 : 0] <= zext_ln15_1_reg_980[2 : 0];
        zext_ln15_1_reg_980_pp0_iter2_reg[2 : 0] <= zext_ln15_1_reg_980_pp0_iter1_reg[2 : 0];
        zext_ln15_1_reg_980_pp0_iter3_reg[2 : 0] <= zext_ln15_1_reg_980_pp0_iter2_reg[2 : 0];
        zext_ln15_1_reg_980_pp0_iter4_reg[2 : 0] <= zext_ln15_1_reg_980_pp0_iter3_reg[2 : 0];
        zext_ln15_1_reg_980_pp0_iter5_reg[2 : 0] <= zext_ln15_1_reg_980_pp0_iter4_reg[2 : 0];
        zext_ln15_1_reg_980_pp0_iter6_reg[2 : 0] <= zext_ln15_1_reg_980_pp0_iter5_reg[2 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul7_i1_reg_1061 <= grp_fu_1461_p_dout0;
        mul7_i398_1_reg_1066 <= grp_fu_1465_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        mul7_i398_10_reg_1216 <= grp_fu_1465_p_dout0;
        mul7_i398_s_reg_1211 <= grp_fu_1461_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        mul7_i398_10_reg_1216_pp0_iter1_reg <= mul7_i398_10_reg_1216;
        mul7_i398_10_reg_1216_pp0_iter2_reg <= mul7_i398_10_reg_1216_pp0_iter1_reg;
        mul7_i398_10_reg_1216_pp0_iter3_reg <= mul7_i398_10_reg_1216_pp0_iter2_reg;
        mul7_i398_s_reg_1211_pp0_iter1_reg <= mul7_i398_s_reg_1211;
        mul7_i398_s_reg_1211_pp0_iter2_reg <= mul7_i398_s_reg_1211_pp0_iter1_reg;
        mul7_i398_s_reg_1211_pp0_iter3_reg <= mul7_i398_s_reg_1211_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        mul7_i398_11_reg_1241 <= grp_fu_1461_p_dout0;
        mul7_i398_12_reg_1246 <= grp_fu_1465_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        mul7_i398_11_reg_1241_pp0_iter1_reg <= mul7_i398_11_reg_1241;
        mul7_i398_11_reg_1241_pp0_iter2_reg <= mul7_i398_11_reg_1241_pp0_iter1_reg;
        mul7_i398_11_reg_1241_pp0_iter3_reg <= mul7_i398_11_reg_1241_pp0_iter2_reg;
        mul7_i398_12_reg_1246_pp0_iter1_reg <= mul7_i398_12_reg_1246;
        mul7_i398_12_reg_1246_pp0_iter2_reg <= mul7_i398_12_reg_1246_pp0_iter1_reg;
        mul7_i398_12_reg_1246_pp0_iter3_reg <= mul7_i398_12_reg_1246_pp0_iter2_reg;
        mul7_i398_12_reg_1246_pp0_iter4_reg <= mul7_i398_12_reg_1246_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul7_i398_13_reg_1261 <= grp_fu_1461_p_dout0;
        mul7_i398_14_reg_1266 <= grp_fu_1465_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul7_i398_15_reg_1281 <= grp_fu_1461_p_dout0;
        mul7_i398_16_reg_1286 <= grp_fu_1465_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul7_i398_15_reg_1281_pp0_iter2_reg <= mul7_i398_15_reg_1281;
        mul7_i398_15_reg_1281_pp0_iter3_reg <= mul7_i398_15_reg_1281_pp0_iter2_reg;
        mul7_i398_15_reg_1281_pp0_iter4_reg <= mul7_i398_15_reg_1281_pp0_iter3_reg;
        mul7_i398_15_reg_1281_pp0_iter5_reg <= mul7_i398_15_reg_1281_pp0_iter4_reg;
        mul7_i398_15_reg_1281_pp0_iter6_reg <= mul7_i398_15_reg_1281_pp0_iter5_reg;
        mul7_i398_16_reg_1286_pp0_iter2_reg <= mul7_i398_16_reg_1286;
        mul7_i398_16_reg_1286_pp0_iter3_reg <= mul7_i398_16_reg_1286_pp0_iter2_reg;
        mul7_i398_16_reg_1286_pp0_iter4_reg <= mul7_i398_16_reg_1286_pp0_iter3_reg;
        mul7_i398_16_reg_1286_pp0_iter5_reg <= mul7_i398_16_reg_1286_pp0_iter4_reg;
        mul7_i398_16_reg_1286_pp0_iter6_reg <= mul7_i398_16_reg_1286_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul7_i398_17_reg_1291 <= grp_fu_1461_p_dout0;
        mul7_i398_18_reg_1296 <= grp_fu_1465_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul7_i398_17_reg_1291_pp0_iter2_reg <= mul7_i398_17_reg_1291;
        mul7_i398_17_reg_1291_pp0_iter3_reg <= mul7_i398_17_reg_1291_pp0_iter2_reg;
        mul7_i398_17_reg_1291_pp0_iter4_reg <= mul7_i398_17_reg_1291_pp0_iter3_reg;
        mul7_i398_17_reg_1291_pp0_iter5_reg <= mul7_i398_17_reg_1291_pp0_iter4_reg;
        mul7_i398_17_reg_1291_pp0_iter6_reg <= mul7_i398_17_reg_1291_pp0_iter5_reg;
        mul7_i398_18_reg_1296_pp0_iter2_reg <= mul7_i398_18_reg_1296;
        mul7_i398_18_reg_1296_pp0_iter3_reg <= mul7_i398_18_reg_1296_pp0_iter2_reg;
        mul7_i398_18_reg_1296_pp0_iter4_reg <= mul7_i398_18_reg_1296_pp0_iter3_reg;
        mul7_i398_18_reg_1296_pp0_iter5_reg <= mul7_i398_18_reg_1296_pp0_iter4_reg;
        mul7_i398_18_reg_1296_pp0_iter6_reg <= mul7_i398_18_reg_1296_pp0_iter5_reg;
        mul7_i398_18_reg_1296_pp0_iter7_reg <= mul7_i398_18_reg_1296_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul7_i398_2_reg_1091 <= grp_fu_1461_p_dout0;
        mul7_i398_3_reg_1096 <= grp_fu_1465_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul7_i398_3_reg_1096_pp0_iter1_reg <= mul7_i398_3_reg_1096;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul7_i398_4_reg_1121 <= grp_fu_1461_p_dout0;
        mul7_i398_5_reg_1126 <= grp_fu_1465_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul7_i398_4_reg_1121_pp0_iter1_reg <= mul7_i398_4_reg_1121;
        mul7_i398_5_reg_1126_pp0_iter1_reg <= mul7_i398_5_reg_1126;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul7_i398_6_reg_1151 <= grp_fu_1461_p_dout0;
        mul7_i398_7_reg_1156 <= grp_fu_1465_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul7_i398_6_reg_1151_pp0_iter1_reg <= mul7_i398_6_reg_1151;
        mul7_i398_7_reg_1156_pp0_iter1_reg <= mul7_i398_7_reg_1156;
        mul7_i398_7_reg_1156_pp0_iter2_reg <= mul7_i398_7_reg_1156_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        mul7_i398_8_reg_1181 <= grp_fu_1461_p_dout0;
        mul7_i398_9_reg_1186 <= grp_fu_1465_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        mul7_i398_8_reg_1181_pp0_iter1_reg <= mul7_i398_8_reg_1181;
        mul7_i398_8_reg_1181_pp0_iter2_reg <= mul7_i398_8_reg_1181_pp0_iter1_reg;
        mul7_i398_9_reg_1186_pp0_iter1_reg <= mul7_i398_9_reg_1186;
        mul7_i398_9_reg_1186_pp0_iter2_reg <= mul7_i398_9_reg_1186_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_454 <= Weights_q1;
        reg_458 <= Weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_462 <= grp_fu_1453_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_467 <= grp_fu_1453_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_472 <= grp_fu_1453_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_477 <= grp_fu_1453_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        reg_482 <= grp_fu_1453_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_487 <= grp_fu_1457_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_492 <= grp_fu_1457_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        reg_497 <= grp_fu_1457_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_502 <= grp_fu_1457_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        s_10_reg_1301 <= grp_fu_1453_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        s_19_reg_1316 <= grp_fu_1457_p_dout0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        Weights_address0 = zext_ln21_fu_849_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        Weights_address0 = zext_ln19_19_fu_819_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        Weights_address0 = zext_ln19_17_fu_789_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        Weights_address0 = zext_ln19_15_fu_757_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        Weights_address0 = zext_ln19_13_fu_727_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        Weights_address0 = zext_ln19_11_fu_697_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        Weights_address0 = zext_ln19_9_fu_667_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        Weights_address0 = zext_ln19_7_fu_635_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        Weights_address0 = zext_ln19_5_fu_605_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Weights_address0 = zext_ln19_3_fu_575_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weights_address0 = zext_ln19_1_fu_550_p1;
    end else begin
        Weights_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            Weights_address1 = zext_ln19_18_fu_809_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            Weights_address1 = zext_ln19_16_fu_779_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            Weights_address1 = zext_ln19_14_fu_747_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            Weights_address1 = zext_ln19_12_fu_717_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            Weights_address1 = zext_ln19_10_fu_687_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            Weights_address1 = zext_ln19_8_fu_657_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            Weights_address1 = zext_ln19_6_fu_625_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            Weights_address1 = zext_ln19_4_fu_595_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            Weights_address1 = zext_ln19_2_fu_565_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Weights_address1 = zext_ln19_fu_539_p1;
        end else begin
            Weights_address1 = 'bx;
        end
    end else begin
        Weights_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        Weights_ce0 = 1'b1;
    end else begin
        Weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        Weights_ce1 = 1'b1;
    end else begin
        Weights_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln15_1_reg_976 == 1'd1) & (1'b0 == ap_block_pp0_stage10_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_condition_exit_pp0_iter0_stage10 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln15_1_reg_976_pp0_iter6_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter7_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter7_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to6 = 1'b1;
    end else begin
        ap_idle_pp0_0to6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to8 = 1'b1;
    end else begin
        ap_idle_pp0_1to8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 3'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_122;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_436_p0 = reg_482;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_436_p0 = reg_477;
    end else if ((((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_436_p0 = reg_472;
    end else if ((((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_436_p0 = reg_467;
    end else if ((((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_436_p0 = reg_462;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_436_p0 = mul7_i1_reg_1061;
    end else begin
        grp_fu_436_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_436_p1 = mul7_i398_s_reg_1211_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_436_p1 = mul7_i398_9_reg_1186_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_436_p1 = mul7_i398_8_reg_1181_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_436_p1 = mul7_i398_7_reg_1156_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_436_p1 = mul7_i398_6_reg_1151_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_436_p1 = mul7_i398_5_reg_1126_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_436_p1 = mul7_i398_4_reg_1121_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_436_p1 = mul7_i398_3_reg_1096_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_436_p1 = mul7_i398_2_reg_1091;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_436_p1 = mul7_i398_1_reg_1066;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_436_p1 = 32'd0;
    end else begin
        grp_fu_436_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_441_p0 = s_19_reg_1316;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_441_p0 = reg_502;
    end else if ((((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        grp_fu_441_p0 = reg_497;
    end else if ((((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_441_p0 = reg_492;
    end else if ((((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_441_p0 = reg_487;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_441_p0 = s_10_reg_1301;
    end else begin
        grp_fu_441_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_441_p1 = bitcast_ln21_fu_854_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_441_p1 = mul7_i398_18_reg_1296_pp0_iter7_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_441_p1 = mul7_i398_17_reg_1291_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_441_p1 = mul7_i398_16_reg_1286_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_441_p1 = mul7_i398_15_reg_1281_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_441_p1 = mul7_i398_14_reg_1266_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_441_p1 = mul7_i398_13_reg_1261_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_441_p1 = mul7_i398_12_reg_1246_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_441_p1 = mul7_i398_11_reg_1241_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_441_p1 = mul7_i398_10_reg_1216_pp0_iter3_reg;
    end else begin
        grp_fu_441_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_446_p0 = OutDense0_load_18;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_446_p0 = OutDense0_load_16;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_446_p0 = OutDense0_load_14;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_446_p0 = OutDense0_load_12;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_446_p0 = OutDense0_load_10;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_446_p0 = OutDense0_load_8;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_446_p0 = OutDense0_load_6;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_446_p0 = OutDense0_load_4;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_446_p0 = OutDense0_load_2;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_446_p0 = OutDense0_load;
    end else begin
        grp_fu_446_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_446_p1 = bitcast_ln19_18_fu_834_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_446_p1 = bitcast_ln19_16_fu_824_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_446_p1 = bitcast_ln19_14_fu_794_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_446_p1 = bitcast_ln19_12_fu_762_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_446_p1 = bitcast_ln19_10_fu_732_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_446_p1 = bitcast_ln19_8_fu_702_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_446_p1 = bitcast_ln19_6_fu_672_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_446_p1 = bitcast_ln19_4_fu_640_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_446_p1 = bitcast_ln19_2_fu_610_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_446_p1 = bitcast_ln19_fu_580_p1;
    end else begin
        grp_fu_446_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_450_p0 = OutDense0_load_19;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_450_p0 = OutDense0_load_17;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_450_p0 = OutDense0_load_15;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_450_p0 = OutDense0_load_13;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_450_p0 = OutDense0_load_11;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_450_p0 = OutDense0_load_9;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_450_p0 = OutDense0_load_7;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_450_p0 = OutDense0_load_5;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_450_p0 = OutDense0_load_3;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_450_p0 = OutDense0_load_1;
    end else begin
        grp_fu_450_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_450_p1 = bitcast_ln19_19_fu_839_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        grp_fu_450_p1 = bitcast_ln19_17_fu_829_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        grp_fu_450_p1 = bitcast_ln19_15_fu_799_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_450_p1 = bitcast_ln19_13_fu_767_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_450_p1 = bitcast_ln19_11_fu_737_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_450_p1 = bitcast_ln19_9_fu_707_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_450_p1 = bitcast_ln19_7_fu_677_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_450_p1 = bitcast_ln19_5_fu_645_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_450_p1 = bitcast_ln19_3_fu_615_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_450_p1 = bitcast_ln19_1_fu_585_p1;
    end else begin
        grp_fu_450_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_Dense_ce0 = 1'b1;
    end else begin
        out_Dense_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out_Dense_we0 = 1'b1;
    end else begin
        out_Dense_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_idle_pp0_1to8 == 1'b1) & (ap_start_int == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln15_fu_521_p2 = (ap_sig_allocacmp_i_1 + 3'd1);

assign add_ln19_10_fu_712_p2 = ($signed(zext_ln15_1_reg_980) + $signed(14'd11020));

assign add_ln19_11_fu_722_p2 = ($signed(zext_ln15_1_reg_980) + $signed(14'd11025));

assign add_ln19_12_fu_742_p2 = ($signed(zext_ln15_1_reg_980) + $signed(14'd11030));

assign add_ln19_13_fu_752_p2 = ($signed(zext_ln15_1_reg_980) + $signed(14'd11035));

assign add_ln19_14_fu_784_p2 = ($signed(zext_ln15_1_reg_980) + $signed(14'd11045));

assign add_ln19_15_fu_804_p2 = ($signed(zext_ln15_1_reg_980) + $signed(14'd11050));

assign add_ln19_16_fu_814_p2 = ($signed(zext_ln15_1_reg_980) + $signed(14'd11055));

assign add_ln19_1_fu_560_p2 = ($signed(zext_ln15_1_reg_980) + $signed(14'd10970));

assign add_ln19_2_fu_570_p2 = ($signed(zext_ln15_1_reg_980) + $signed(14'd10975));

assign add_ln19_3_fu_590_p2 = ($signed(zext_ln15_1_reg_980) + $signed(14'd10980));

assign add_ln19_4_fu_600_p2 = ($signed(zext_ln15_1_reg_980) + $signed(14'd10985));

assign add_ln19_5_fu_620_p2 = ($signed(zext_ln15_1_reg_980) + $signed(14'd10990));

assign add_ln19_6_fu_630_p2 = ($signed(zext_ln15_1_reg_980) + $signed(14'd10995));

assign add_ln19_7_fu_662_p2 = ($signed(zext_ln15_1_reg_980) + $signed(14'd11005));

assign add_ln19_8_fu_682_p2 = ($signed(zext_ln15_1_reg_980) + $signed(14'd11010));

assign add_ln19_9_fu_692_p2 = ($signed(zext_ln15_1_reg_980) + $signed(14'd11015));

assign add_ln19_fu_544_p2 = ($signed(zext_ln15_1_fu_527_p1) + $signed(14'd10965));

assign add_ln21_fu_844_p2 = ($signed(zext_ln15_1_reg_980_pp0_iter6_reg) + $signed(14'd11060));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage10;

assign bitcast_ln19_10_fu_732_p1 = reg_454;

assign bitcast_ln19_11_fu_737_p1 = reg_458;

assign bitcast_ln19_12_fu_762_p1 = reg_454;

assign bitcast_ln19_13_fu_767_p1 = reg_458;

assign bitcast_ln19_14_fu_794_p1 = reg_454;

assign bitcast_ln19_15_fu_799_p1 = reg_458;

assign bitcast_ln19_16_fu_824_p1 = reg_454;

assign bitcast_ln19_17_fu_829_p1 = reg_458;

assign bitcast_ln19_18_fu_834_p1 = reg_454;

assign bitcast_ln19_19_fu_839_p1 = reg_458;

assign bitcast_ln19_1_fu_585_p1 = reg_458;

assign bitcast_ln19_2_fu_610_p1 = reg_454;

assign bitcast_ln19_3_fu_615_p1 = reg_458;

assign bitcast_ln19_4_fu_640_p1 = reg_454;

assign bitcast_ln19_5_fu_645_p1 = reg_458;

assign bitcast_ln19_6_fu_672_p1 = reg_454;

assign bitcast_ln19_7_fu_677_p1 = reg_458;

assign bitcast_ln19_8_fu_702_p1 = reg_454;

assign bitcast_ln19_9_fu_707_p1 = reg_458;

assign bitcast_ln19_fu_580_p1 = reg_454;

assign bitcast_ln21_fu_854_p1 = Weights_load_20_reg_1311;

assign grp_fu_1453_p_ce = 1'b1;

assign grp_fu_1453_p_din0 = grp_fu_436_p0;

assign grp_fu_1453_p_din1 = grp_fu_436_p1;

assign grp_fu_1453_p_opcode = 2'd0;

assign grp_fu_1457_p_ce = 1'b1;

assign grp_fu_1457_p_din0 = grp_fu_441_p0;

assign grp_fu_1457_p_din1 = grp_fu_441_p1;

assign grp_fu_1457_p_opcode = 2'd0;

assign grp_fu_1461_p_ce = 1'b1;

assign grp_fu_1461_p_din0 = grp_fu_446_p0;

assign grp_fu_1461_p_din1 = grp_fu_446_p1;

assign grp_fu_1465_p_ce = 1'b1;

assign grp_fu_1465_p_din0 = grp_fu_450_p0;

assign grp_fu_1465_p_din1 = grp_fu_450_p1;

assign icmp_ln15_1_fu_515_p2 = ((ap_sig_allocacmp_i_1 == 3'd5) ? 1'b1 : 1'b0);

assign out_Dense_address0 = zext_ln15_fu_858_p1;

assign out_Dense_d0 = grp_fu_1457_p_dout0;

assign zext_ln15_1_fu_527_p1 = ap_sig_allocacmp_i_1;

assign zext_ln15_fu_858_p1 = i_1_reg_969_pp0_iter7_reg;

assign zext_ln19_10_fu_687_p1 = add_ln19_8_fu_682_p2;

assign zext_ln19_11_fu_697_p1 = add_ln19_9_fu_692_p2;

assign zext_ln19_12_fu_717_p1 = add_ln19_10_fu_712_p2;

assign zext_ln19_13_fu_727_p1 = add_ln19_11_fu_722_p2;

assign zext_ln19_14_fu_747_p1 = add_ln19_12_fu_742_p2;

assign zext_ln19_15_fu_757_p1 = add_ln19_13_fu_752_p2;

assign zext_ln19_16_cast_fu_772_p3 = {{11'd1380}, {i_1_reg_969}};

assign zext_ln19_16_fu_779_p1 = zext_ln19_16_cast_fu_772_p3;

assign zext_ln19_17_fu_789_p1 = add_ln19_14_fu_784_p2;

assign zext_ln19_18_fu_809_p1 = add_ln19_15_fu_804_p2;

assign zext_ln19_19_fu_819_p1 = add_ln19_16_fu_814_p2;

assign zext_ln19_1_fu_550_p1 = add_ln19_fu_544_p2;

assign zext_ln19_2_fu_565_p1 = add_ln19_1_fu_560_p2;

assign zext_ln19_3_fu_575_p1 = add_ln19_2_fu_570_p2;

assign zext_ln19_4_fu_595_p1 = add_ln19_3_fu_590_p2;

assign zext_ln19_5_fu_605_p1 = add_ln19_4_fu_600_p2;

assign zext_ln19_6_fu_625_p1 = add_ln19_5_fu_620_p2;

assign zext_ln19_7_fu_635_p1 = add_ln19_6_fu_630_p2;

assign zext_ln19_8_cast_fu_650_p3 = {{11'd1375}, {i_1_reg_969}};

assign zext_ln19_8_fu_657_p1 = zext_ln19_8_cast_fu_650_p3;

assign zext_ln19_9_fu_667_p1 = add_ln19_7_fu_662_p2;

assign zext_ln19_cast_fu_531_p3 = {{11'd1370}, {ap_sig_allocacmp_i_1}};

assign zext_ln19_fu_539_p1 = zext_ln19_cast_fu_531_p3;

assign zext_ln21_fu_849_p1 = add_ln21_fu_844_p2;

always @ (posedge ap_clk) begin
    zext_ln15_1_reg_980[13:3] <= 11'b00000000000;
    zext_ln15_1_reg_980_pp0_iter1_reg[13:3] <= 11'b00000000000;
    zext_ln15_1_reg_980_pp0_iter2_reg[13:3] <= 11'b00000000000;
    zext_ln15_1_reg_980_pp0_iter3_reg[13:3] <= 11'b00000000000;
    zext_ln15_1_reg_980_pp0_iter4_reg[13:3] <= 11'b00000000000;
    zext_ln15_1_reg_980_pp0_iter5_reg[13:3] <= 11'b00000000000;
    zext_ln15_1_reg_980_pp0_iter6_reg[13:3] <= 11'b00000000000;
end

endmodule //CNN_CNN_Pipeline_loop_for_a_Dense_1
